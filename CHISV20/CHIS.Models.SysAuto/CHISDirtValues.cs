 
  
   
 
     
         
             
              
//--------------------------------------------------------------------------- ---     
// <auto-generated>             
//     此代码由T4模板自动生成          
//	   生成时间 2018-03-12 14:44:47 by Rex             
//     对此文件的更改可能会导致不正确的行为，并且如果               
//     重新生成代码，这些更改将会丢失。                     
// </auto-generated>      
//------------------------------------------------------------------------------          
    
using System;                
using Microsoft.EntityFrameworkCore;     
using System.ComponentModel.DataAnnotations;    
using System.Collections.Generic;
using CHIS;
using CHIS.Models; 
using System.Linq;
namespace CHIS.DictValues   
{	   
	/// <summary>
	/// 代理商信息 
	/// </summary>
    public partial class Agent:BaseDictValue{		 
		public Agent():base(2,"Agent","代理商信息",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(51,"Key1","万科集团","1",true,false ),					
			new CHIS_Code_Dict_Detail(52,"Key2","深圳华为","2",true,false ),					
			};
		}
		static Agent _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Agent Ins(){return _ins??(_ins=new Agent());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///万科集团
  ///</summary>
  public static int k_Key1 =51;
    ///<summary>
  ///深圳华为
  ///</summary>
  public static int k_Key2 =52;
    
  }

 	/// <summary>
	/// 药品仓库 
	/// </summary>
    public partial class StorageDrug:BaseDictValue{		 
		public StorageDrug():base(4,"StorageDrug","药品仓库",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(62,"Key1","中心库房","1",true,false ),					
			new CHIS_Code_Dict_Detail(63,"Key2","东莞横沥医院总库房","2",true,false ),					
			new CHIS_Code_Dict_Detail(64,"Key3","东莞市人民医院库房","3",true,false ),					
			};
		}
		static StorageDrug _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static StorageDrug Ins(){return _ins??(_ins=new StorageDrug());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///中心库房
  ///</summary>
  public static int k_Key1 =62;
    ///<summary>
  ///东莞横沥医院总库房
  ///</summary>
  public static int k_Key2 =63;
    ///<summary>
  ///东莞市人民医院库房
  ///</summary>
  public static int k_Key3 =64;
    
  }

 	/// <summary>
	/// 医药品库存类别 
	/// </summary>
    public partial class DrugStockType:BaseDictValue{		 
		public DrugStockType():base(10,"DrugStockType","医药品库存类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(1,"DrugType_zy","西药","XY",true,false ),					
			new CHIS_Code_Dict_Detail(2,"DrugType_zyc","中成药","ZYC",true,false ),					
			new CHIS_Code_Dict_Detail(3,"DrugType_zyf","中草药","ZYF",true,false ),					
			new CHIS_Code_Dict_Detail(20,"DrugType_m","材料","M",true,false ),					
			new CHIS_Code_Dict_Detail(12994,"DrugStockType_cz","处置类别","DrugStockType_cz",true,false ),					
			new CHIS_Code_Dict_Detail(12965,"DrugType_jky","健客药","jky",true,false ),					
			};
		}
		static DrugStockType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DrugStockType Ins(){return _ins??(_ins=new DrugStockType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///西药
  ///</summary>
  public static int k_DrugType_zy =1;
    ///<summary>
  ///中成药
  ///</summary>
  public static int k_DrugType_zyc =2;
    ///<summary>
  ///中草药
  ///</summary>
  public static int k_DrugType_zyf =3;
    ///<summary>
  ///材料
  ///</summary>
  public static int k_DrugType_m =20;
    ///<summary>
  ///处置类别
  ///</summary>
  public static int k_DrugStockType_cz =12994;
    ///<summary>
  ///健客药
  ///</summary>
  public static int k_DrugType_jky =12965;
    
  }

 	/// <summary>
	/// 药理类别 
	/// </summary>
    public partial class MedicalType:BaseDictValue{		 
		public MedicalType():base(11,"MedicalType","药理类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(4,"Keya","抗生素类","a",true,false ),					
			new CHIS_Code_Dict_Detail(5,"Keyb","合成抗菌素","b",true,false ),					
			new CHIS_Code_Dict_Detail(6,"Keyc","麻醉药及管理药品","c",true,false ),					
			new CHIS_Code_Dict_Detail(12828,"MedicalType_qt","其他","mtqt",true,false ),					
			new CHIS_Code_Dict_Detail(12881,"MedicalType_fukeyongyao","妇科用药","fukeyongyao",true,false ),					
			new CHIS_Code_Dict_Detail(12894,"MedicalType_jiaonang","胶囊","jn",true,false ),					
			new CHIS_Code_Dict_Detail(12895,"MedicalType_meilei","酶类","ml",true,false ),					
			new CHIS_Code_Dict_Detail(12896,"MedicalType_myyzj","免疫抑制剂","my",true,false ),					
			new CHIS_Code_Dict_Detail(12897,"MedicalType_pf","皮肤科用药","pf",true,false ),					
			new CHIS_Code_Dict_Detail(12898,"MedicalType_sd","水、电解质平衡调节药","sd",true,false ),					
			new CHIS_Code_Dict_Detail(12899,"MedicalType_wss","维生素类","wss",true,false ),					
			new CHIS_Code_Dict_Detail(12900,"MedicalType_ssx","肾上腺皮质激素类","ssx",true,false ),					
			new CHIS_Code_Dict_Detail(12901,"MedicalType_sw","生物和生化制剂","sw",true,false ),					
			new CHIS_Code_Dict_Detail(12902,"MedicalType_tbl","头孢类","tbl",true,false ),					
			new CHIS_Code_Dict_Detail(12903,"MedicalType_wc","胃肠类药","wc",true,false ),					
			new CHIS_Code_Dict_Detail(12904,"MedicalType_eye","眼科类","eye",true,false ),					
			new CHIS_Code_Dict_Detail(12905,"MedicalType_zk","镇咳药","zk",true,false ),					
			new CHIS_Code_Dict_Detail(12906,"MedicalType_zt","镇痛药","zt",true,false ),					
			new CHIS_Code_Dict_Detail(12907,"MedicalType_ebh","耳鼻喉及口腔类","ebh",true,false ),					
			new CHIS_Code_Dict_Detail(12908,"MedicalType_gg","骨骼类","gg",true,false ),					
			new CHIS_Code_Dict_Detail(12909,"MedicalType_xll","心率类","xll",true,false ),					
			new CHIS_Code_Dict_Detail(12912,"MedicalType_pc","平喘药","pc",true,false ),					
			new CHIS_Code_Dict_Detail(12913,"MedicalType_ptt","葡萄糖类","pt",true,false ),					
			new CHIS_Code_Dict_Detail(12914,"MedicalType_wlys","微量元素及其复合制剂","wlys",true,false ),					
			new CHIS_Code_Dict_Detail(12915,"MedicalType_gm","感冒药","gm",true,false ),					
			new CHIS_Code_Dict_Detail(12916,"MedicalType_js","精神类","js",true,false ),					
			};
		}
		static MedicalType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static MedicalType Ins(){return _ins??(_ins=new MedicalType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///抗生素类
  ///</summary>
  public static int k_Keya =4;
    ///<summary>
  ///合成抗菌素
  ///</summary>
  public static int k_Keyb =5;
    ///<summary>
  ///麻醉药及管理药品
  ///</summary>
  public static int k_Keyc =6;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_MedicalType_qt =12828;
    ///<summary>
  ///妇科用药
  ///</summary>
  public static int k_MedicalType_fukeyongyao =12881;
    ///<summary>
  ///胶囊
  ///</summary>
  public static int k_MedicalType_jiaonang =12894;
    ///<summary>
  ///酶类
  ///</summary>
  public static int k_MedicalType_meilei =12895;
    ///<summary>
  ///免疫抑制剂
  ///</summary>
  public static int k_MedicalType_myyzj =12896;
    ///<summary>
  ///皮肤科用药
  ///</summary>
  public static int k_MedicalType_pf =12897;
    ///<summary>
  ///水、电解质平衡调节药
  ///</summary>
  public static int k_MedicalType_sd =12898;
    ///<summary>
  ///维生素类
  ///</summary>
  public static int k_MedicalType_wss =12899;
    ///<summary>
  ///肾上腺皮质激素类
  ///</summary>
  public static int k_MedicalType_ssx =12900;
    ///<summary>
  ///生物和生化制剂
  ///</summary>
  public static int k_MedicalType_sw =12901;
    ///<summary>
  ///头孢类
  ///</summary>
  public static int k_MedicalType_tbl =12902;
    ///<summary>
  ///胃肠类药
  ///</summary>
  public static int k_MedicalType_wc =12903;
    ///<summary>
  ///眼科类
  ///</summary>
  public static int k_MedicalType_eye =12904;
    ///<summary>
  ///镇咳药
  ///</summary>
  public static int k_MedicalType_zk =12905;
    ///<summary>
  ///镇痛药
  ///</summary>
  public static int k_MedicalType_zt =12906;
    ///<summary>
  ///耳鼻喉及口腔类
  ///</summary>
  public static int k_MedicalType_ebh =12907;
    ///<summary>
  ///骨骼类
  ///</summary>
  public static int k_MedicalType_gg =12908;
    ///<summary>
  ///心率类
  ///</summary>
  public static int k_MedicalType_xll =12909;
    ///<summary>
  ///平喘药
  ///</summary>
  public static int k_MedicalType_pc =12912;
    ///<summary>
  ///葡萄糖类
  ///</summary>
  public static int k_MedicalType_ptt =12913;
    ///<summary>
  ///微量元素及其复合制剂
  ///</summary>
  public static int k_MedicalType_wlys =12914;
    ///<summary>
  ///感冒药
  ///</summary>
  public static int k_MedicalType_gm =12915;
    ///<summary>
  ///精神类
  ///</summary>
  public static int k_MedicalType_js =12916;
    
  }

 	/// <summary>
	/// 剂型类别 
	/// </summary>
    public partial class FormType:BaseDictValue{		 
		public FormType():base(12,"FormType","剂型类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(8,"Keyb","片剂","b",true,false ),					
			new CHIS_Code_Dict_Detail(9,"Keyc","胶囊","c",true,false ),					
			new CHIS_Code_Dict_Detail(7,"Keya","针剂","a",true,false ),					
			new CHIS_Code_Dict_Detail(12879,"FormType_KFy","口服液","KFY",true,false ),					
			new CHIS_Code_Dict_Detail(12794,"FormType_cj","冲剂","cj",true,false ),					
			new CHIS_Code_Dict_Detail(12876,"FormType_KeLi","颗粒","KeLi",true,false ),					
			new CHIS_Code_Dict_Detail(13003,"FormType_nj","凝胶","FormType_NingJiao",true,false ),					
			new CHIS_Code_Dict_Detail(12825,"FormType_Herbs","中药-味","Herbs",true,false ),					
			new CHIS_Code_Dict_Detail(12877,"FormType_YinPian","饮片","YinPian",true,false ),					
			new CHIS_Code_Dict_Detail(12921,"FormType_wj","丸剂","wj",true,false ),					
			new CHIS_Code_Dict_Detail(13004,"FormType_yt","液体","FormType_yt",true,false ),					
			new CHIS_Code_Dict_Detail(12922,"FormType_xrj","吸入剂","xrj",true,false ),					
			new CHIS_Code_Dict_Detail(12878,"FormType_DaShuYe","大输液","DaShuYe",true,false ),					
			new CHIS_Code_Dict_Detail(12826,"FormType_wy","丸药","wy",true,false ),					
			new CHIS_Code_Dict_Detail(12880,"FormType_WaiYong","外用","WaiYong",true,false ),					
			new CHIS_Code_Dict_Detail(12882,"FormType_diji","滴剂","diji",true,false ),					
			new CHIS_Code_Dict_Detail(12883,"FormType_sanji","散剂","sanji",true,false ),					
			new CHIS_Code_Dict_Detail(12917,"FormType_zsyfz","注射用粉针","fz",true,false ),					
			new CHIS_Code_Dict_Detail(12920,"FormType_gj","膏剂","gj",true,false ),					
			new CHIS_Code_Dict_Detail(12827,"FormType_qt","其他","qt",true,false ),					
			};
		}
		static FormType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static FormType Ins(){return _ins??(_ins=new FormType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///片剂
  ///</summary>
  public static int k_Keyb =8;
    ///<summary>
  ///胶囊
  ///</summary>
  public static int k_Keyc =9;
    ///<summary>
  ///针剂
  ///</summary>
  public static int k_Keya =7;
    ///<summary>
  ///口服液
  ///</summary>
  public static int k_FormType_KFy =12879;
    ///<summary>
  ///冲剂
  ///</summary>
  public static int k_FormType_cj =12794;
    ///<summary>
  ///颗粒
  ///</summary>
  public static int k_FormType_KeLi =12876;
    ///<summary>
  ///凝胶
  ///</summary>
  public static int k_FormType_nj =13003;
    ///<summary>
  ///中药-味
  ///</summary>
  public static int k_FormType_Herbs =12825;
    ///<summary>
  ///饮片
  ///</summary>
  public static int k_FormType_YinPian =12877;
    ///<summary>
  ///丸剂
  ///</summary>
  public static int k_FormType_wj =12921;
    ///<summary>
  ///液体
  ///</summary>
  public static int k_FormType_yt =13004;
    ///<summary>
  ///吸入剂
  ///</summary>
  public static int k_FormType_xrj =12922;
    ///<summary>
  ///大输液
  ///</summary>
  public static int k_FormType_DaShuYe =12878;
    ///<summary>
  ///丸药
  ///</summary>
  public static int k_FormType_wy =12826;
    ///<summary>
  ///外用
  ///</summary>
  public static int k_FormType_WaiYong =12880;
    ///<summary>
  ///滴剂
  ///</summary>
  public static int k_FormType_diji =12882;
    ///<summary>
  ///散剂
  ///</summary>
  public static int k_FormType_sanji =12883;
    ///<summary>
  ///注射用粉针
  ///</summary>
  public static int k_FormType_zsyfz =12917;
    ///<summary>
  ///膏剂
  ///</summary>
  public static int k_FormType_gj =12920;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_FormType_qt =12827;
    
  }

 	/// <summary>
	/// 生产属性类别 
	/// </summary>
    public partial class ProductArea:BaseDictValue{		 
		public ProductArea():base(13,"ProductArea","生产属性类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(10,"ProductArea_ByOwnNation","国产","ByOwnNation",true,false ),					
			new CHIS_Code_Dict_Detail(11,"ProductArea_Inport","进口","Inport",true,false ),					
			new CHIS_Code_Dict_Detail(12,"ProductArea_Union","合资","Union",true,false ),					
			new CHIS_Code_Dict_Detail(13,"ProductArea_self","自制","Self",true,false ),					
			};
		}
		static ProductArea _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static ProductArea Ins(){return _ins??(_ins=new ProductArea());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///国产
  ///</summary>
  public static int k_ProductArea_ByOwnNation =10;
    ///<summary>
  ///进口
  ///</summary>
  public static int k_ProductArea_Inport =11;
    ///<summary>
  ///合资
  ///</summary>
  public static int k_ProductArea_Union =12;
    ///<summary>
  ///自制
  ///</summary>
  public static int k_ProductArea_self =13;
    
  }

 	/// <summary>
	/// 特殊药品 
	/// </summary>
    public partial class SpecialDrug:BaseDictValue{		 
		public SpecialDrug():base(14,"SpecialDrug","特殊药品",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(14,"Keya","普通","a",true,false ),					
			new CHIS_Code_Dict_Detail(15,"Keyb","毒性","b",true,false ),					
			new CHIS_Code_Dict_Detail(16,"Keyc","麻醉","c",true,false ),					
			new CHIS_Code_Dict_Detail(17,"Keyd","放射性","d",true,false ),					
			new CHIS_Code_Dict_Detail(18,"Keye","第一类精神药品","e",true,false ),					
			new CHIS_Code_Dict_Detail(19,"Keyf","第二类精神药品","f",true,false ),					
			new CHIS_Code_Dict_Detail(12923,"SpecialDrug_qt","其他","qt",true,false ),					
			};
		}
		static SpecialDrug _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static SpecialDrug Ins(){return _ins??(_ins=new SpecialDrug());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///普通
  ///</summary>
  public static int k_Keya =14;
    ///<summary>
  ///毒性
  ///</summary>
  public static int k_Keyb =15;
    ///<summary>
  ///麻醉
  ///</summary>
  public static int k_Keyc =16;
    ///<summary>
  ///放射性
  ///</summary>
  public static int k_Keyd =17;
    ///<summary>
  ///第一类精神药品
  ///</summary>
  public static int k_Keye =18;
    ///<summary>
  ///第二类精神药品
  ///</summary>
  public static int k_Keyf =19;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_SpecialDrug_qt =12923;
    
  }

 	/// <summary>
	/// 基础分类 
	/// </summary>
    public partial class BasicClass:BaseDictValue{		 
		public BasicClass():base(15,"BasicClass","基础分类",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(44,"Key1","西药费","1",true,false ),					
			new CHIS_Code_Dict_Detail(45,"Key2","中成药","2",true,false ),					
			new CHIS_Code_Dict_Detail(46,"Key3","中草药","3",true,false ),					
			new CHIS_Code_Dict_Detail(47,"Key4","住院费","4",true,false ),					
			};
		}
		static BasicClass _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static BasicClass Ins(){return _ins??(_ins=new BasicClass());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///西药费
  ///</summary>
  public static int k_Key1 =44;
    ///<summary>
  ///中成药
  ///</summary>
  public static int k_Key2 =45;
    ///<summary>
  ///中草药
  ///</summary>
  public static int k_Key3 =46;
    ///<summary>
  ///住院费
  ///</summary>
  public static int k_Key4 =47;
    
  }

 	/// <summary>
	/// 挂号类别 
	/// </summary>
    public partial class RegisterType:BaseDictValue{		 
		public RegisterType():base(16,"RegisterType","挂号类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12773,"RegisterType_normal","普通号","normal",true,false ),					
			new CHIS_Code_Dict_Detail(12774,"RegisterType_pro","专家号","pro",true,false ),					
			new CHIS_Code_Dict_Detail(12871,"RegisterType_sysauto","系统自动","sysauto",true,false ),					
			};
		}
		static RegisterType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static RegisterType Ins(){return _ins??(_ins=new RegisterType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///普通号
  ///</summary>
  public static int k_RegisterType_normal =12773;
    ///<summary>
  ///专家号
  ///</summary>
  public static int k_RegisterType_pro =12774;
    ///<summary>
  ///系统自动
  ///</summary>
  public static int k_RegisterType_sysauto =12871;
    
  }

 	/// <summary>
	/// 入库类别 
	/// </summary>
    public partial class StorageType:BaseDictValue{		 
		public StorageType():base(18,"StorageType","入库类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(21,"Key1","采购入库","1",true,false ),					
			new CHIS_Code_Dict_Detail(22,"Key2","调拨入库","2",true,false ),					
			new CHIS_Code_Dict_Detail(23,"Key3","退货入库","3",true,false ),					
			};
		}
		static StorageType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static StorageType Ins(){return _ins??(_ins=new StorageType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///采购入库
  ///</summary>
  public static int k_Key1 =21;
    ///<summary>
  ///调拨入库
  ///</summary>
  public static int k_Key2 =22;
    ///<summary>
  ///退货入库
  ///</summary>
  public static int k_Key3 =23;
    
  }

 	/// <summary>
	/// 出库类别 
	/// </summary>
    public partial class DeliveryType:BaseDictValue{		 
		public DeliveryType():base(19,"DeliveryType","出库类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(66,"","发药出库","1",true,false ),					
			new CHIS_Code_Dict_Detail(67,"","调拨出库","2",true,true ),					
			new CHIS_Code_Dict_Detail(68,"","退货出库","3",true,false ),					
			new CHIS_Code_Dict_Detail(69,"","科室领用","4",true,false ),					
			};
		}
		static DeliveryType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DeliveryType Ins(){return _ins??(_ins=new DeliveryType());} 
  //继续载入键名和值，生成属性
    
  }

 	/// <summary>
	/// 物品单位 
	/// </summary>
    public partial class GoodsUnit:BaseDictValue{		 
		public GoodsUnit():base(21,"GoodsUnit","物品单位",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(109,"GoodsUnit_ji","剂","ji",true,false ),					
			new CHIS_Code_Dict_Detail(26,"GoodsUnit_zhi","支","zhi",true,false ),					
			new CHIS_Code_Dict_Detail(12797,"GoodsUnit_p","颗","p",true,false ),					
			new CHIS_Code_Dict_Detail(29,"GoodsUnit_bao","包","bao",true,false ),					
			new CHIS_Code_Dict_Detail(36,"GoodsUnit_ge","个","ge",true,false ),					
			new CHIS_Code_Dict_Detail(30,"GoodsUnit_pcsli","粒","pcsli",true,false ),					
			new CHIS_Code_Dict_Detail(12927,"MedicalType_pian","片","p",true,false ),					
			new CHIS_Code_Dict_Detail(12930,"MedicalType_wan","丸","wan",true,false ),					
			new CHIS_Code_Dict_Detail(12937,"MedicalType_di","滴","di",true,false ),					
			new CHIS_Code_Dict_Detail(12931,"MedicalType_tie","贴","tie",true,false ),					
			new CHIS_Code_Dict_Detail(12941,"MedicalType_pen","喷","pen",true,false ),					
			new CHIS_Code_Dict_Detail(12924,"GoodsUnit_ml","毫升","ml",true,false ),					
			new CHIS_Code_Dict_Detail(43,"GoodsUnit_kg","千克","kg",true,false ),					
			new CHIS_Code_Dict_Detail(105,"GoodsUnit_10g","十克","10g",true,false ),					
			new CHIS_Code_Dict_Detail(106,"GoodsUnit_ti","提","ti",true,false ),					
			new CHIS_Code_Dict_Detail(107,"GoodsUnit_gs","公升","gs",true,false ),					
			new CHIS_Code_Dict_Detail(108,"GoodsUnit_dui","对","dui",true,false ),					
			new CHIS_Code_Dict_Detail(42,"GoodsUnit_g","克","g",true,false ),					
			new CHIS_Code_Dict_Detail(12873,"GoodsUnit_mg","毫克","mg",true,false ),					
			new CHIS_Code_Dict_Detail(12874,"GoodsUnit_ug","微克","ug",true,false ),					
			new CHIS_Code_Dict_Detail(12875,"GoodsUnit_gunit","万单位","gunit",true,false ),					
			new CHIS_Code_Dict_Detail(12933,"MedicalType_IU","IU(国际单位)","IU",true,false ),					
			new CHIS_Code_Dict_Detail(12934,"MedicalType_KIU","KU","KIU",true,false ),					
			new CHIS_Code_Dict_Detail(12935,"MedicalType_u","U(单位)","u",true,false ),					
			new CHIS_Code_Dict_Detail(12936,"MedicalType_dw","单位","dw",true,false ),					
			new CHIS_Code_Dict_Detail(12938,"MedicalType_wiu","万(IU)","di",true,false ),					
			new CHIS_Code_Dict_Detail(12939,"MedicalType_wu","万(U)","wu",true,false ),					
			new CHIS_Code_Dict_Detail(12940,"MedicalType_w","万","w",true,false ),					
			new CHIS_Code_Dict_Detail(12796,"GoodsUnit_z","只","z",true,false ),					
			new CHIS_Code_Dict_Detail(12795,"GoodsUnit_xiang","箱","xiang",true,false ),					
			new CHIS_Code_Dict_Detail(12925,"GoodsUnit_ban","板","ban",true,false ),					
			new CHIS_Code_Dict_Detail(12926,"GoodsUnit_he2","合","he2",true,false ),					
			new CHIS_Code_Dict_Detail(12928,"MedicalType_tiao","条","t",true,false ),					
			new CHIS_Code_Dict_Detail(12929,"MedicalType_zha","扎","z",true,false ),					
			new CHIS_Code_Dict_Detail(37,"GoodsUnit_fu","副","fu",true,false ),					
			new CHIS_Code_Dict_Detail(38,"GoodsUnit_jian","件","jian",true,false ),					
			new CHIS_Code_Dict_Detail(39,"GoodsUnit_pai","排","pai",true,false ),					
			new CHIS_Code_Dict_Detail(40,"GoodsUnit_tong2","筒","tong2",true,false ),					
			new CHIS_Code_Dict_Detail(41,"GoodsUnit_zhang","张","zhang",true,false ),					
			new CHIS_Code_Dict_Detail(32,"GoodsUnit_tong","桶","tong",true,false ),					
			new CHIS_Code_Dict_Detail(33,"GoodsUnit_juan","卷","juan",true,false ),					
			new CHIS_Code_Dict_Detail(34,"GoodsUnit_kuai","块","kuai",true,false ),					
			new CHIS_Code_Dict_Detail(35,"GoodsUnit_ba","把","ba",true,false ),					
			new CHIS_Code_Dict_Detail(27,"GoodsUnit_tao","套","tao",true,false ),					
			new CHIS_Code_Dict_Detail(28,"GoodsUnit_dai","袋","dai",true,false ),					
			new CHIS_Code_Dict_Detail(24,"GoodsUnit_ping","瓶","ping",true,false ),					
			new CHIS_Code_Dict_Detail(25,"GoodsUnit_he","盒","he",true,false ),					
			new CHIS_Code_Dict_Detail(12932,"MedicalType_mei","枚","m",true,false ),					
			new CHIS_Code_Dict_Detail(12942,"MedicalType_qin","揿","qin",true,false ),					
			new CHIS_Code_Dict_Detail(12962,"GoodsUnit_Guan","罐","Guan",true,false ),					
			new CHIS_Code_Dict_Detail(12963,"GoodsUnit_Tai","台","Tai",true,false ),					
			new CHIS_Code_Dict_Detail(12964,"GoodsUnit_Uone","包装","Uone",true,false ),					
			new CHIS_Code_Dict_Detail(12990,"GoodsUnit_da","打","GoodsUnit_da",true,false ),					
			new CHIS_Code_Dict_Detail(12991,"GoodsUnit_pen","盆","GoodsUnit_pen",true,false ),					
			new CHIS_Code_Dict_Detail(12992,"GoodsUnit_wan","碗","GoodsUnit_wan",true,false ),					
			new CHIS_Code_Dict_Detail(12993,"GoodsUnit_ting","听","GoodsUnit_ting",true,false ),					
			new CHIS_Code_Dict_Detail(12995,"GoodsUnit_ci","次","GoodsUnit_ci",true,false ),					
			};
		}
		static GoodsUnit _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static GoodsUnit Ins(){return _ins??(_ins=new GoodsUnit());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///剂
  ///</summary>
  public static int k_GoodsUnit_ji =109;
    ///<summary>
  ///支
  ///</summary>
  public static int k_GoodsUnit_zhi =26;
    ///<summary>
  ///颗
  ///</summary>
  public static int k_GoodsUnit_p =12797;
    ///<summary>
  ///包
  ///</summary>
  public static int k_GoodsUnit_bao =29;
    ///<summary>
  ///个
  ///</summary>
  public static int k_GoodsUnit_ge =36;
    ///<summary>
  ///粒
  ///</summary>
  public static int k_GoodsUnit_pcsli =30;
    ///<summary>
  ///片
  ///</summary>
  public static int k_MedicalType_pian =12927;
    ///<summary>
  ///丸
  ///</summary>
  public static int k_MedicalType_wan =12930;
    ///<summary>
  ///滴
  ///</summary>
  public static int k_MedicalType_di =12937;
    ///<summary>
  ///贴
  ///</summary>
  public static int k_MedicalType_tie =12931;
    ///<summary>
  ///喷
  ///</summary>
  public static int k_MedicalType_pen =12941;
    ///<summary>
  ///毫升
  ///</summary>
  public static int k_GoodsUnit_ml =12924;
    ///<summary>
  ///千克
  ///</summary>
  public static int k_GoodsUnit_kg =43;
    ///<summary>
  ///十克
  ///</summary>
  public static int k_GoodsUnit_10g =105;
    ///<summary>
  ///提
  ///</summary>
  public static int k_GoodsUnit_ti =106;
    ///<summary>
  ///公升
  ///</summary>
  public static int k_GoodsUnit_gs =107;
    ///<summary>
  ///对
  ///</summary>
  public static int k_GoodsUnit_dui =108;
    ///<summary>
  ///克
  ///</summary>
  public static int k_GoodsUnit_g =42;
    ///<summary>
  ///毫克
  ///</summary>
  public static int k_GoodsUnit_mg =12873;
    ///<summary>
  ///微克
  ///</summary>
  public static int k_GoodsUnit_ug =12874;
    ///<summary>
  ///万单位
  ///</summary>
  public static int k_GoodsUnit_gunit =12875;
    ///<summary>
  ///IU(国际单位)
  ///</summary>
  public static int k_MedicalType_IU =12933;
    ///<summary>
  ///KU
  ///</summary>
  public static int k_MedicalType_KIU =12934;
    ///<summary>
  ///U(单位)
  ///</summary>
  public static int k_MedicalType_u =12935;
    ///<summary>
  ///单位
  ///</summary>
  public static int k_MedicalType_dw =12936;
    ///<summary>
  ///万(IU)
  ///</summary>
  public static int k_MedicalType_wiu =12938;
    ///<summary>
  ///万(U)
  ///</summary>
  public static int k_MedicalType_wu =12939;
    ///<summary>
  ///万
  ///</summary>
  public static int k_MedicalType_w =12940;
    ///<summary>
  ///只
  ///</summary>
  public static int k_GoodsUnit_z =12796;
    ///<summary>
  ///箱
  ///</summary>
  public static int k_GoodsUnit_xiang =12795;
    ///<summary>
  ///板
  ///</summary>
  public static int k_GoodsUnit_ban =12925;
    ///<summary>
  ///合
  ///</summary>
  public static int k_GoodsUnit_he2 =12926;
    ///<summary>
  ///条
  ///</summary>
  public static int k_MedicalType_tiao =12928;
    ///<summary>
  ///扎
  ///</summary>
  public static int k_MedicalType_zha =12929;
    ///<summary>
  ///副
  ///</summary>
  public static int k_GoodsUnit_fu =37;
    ///<summary>
  ///件
  ///</summary>
  public static int k_GoodsUnit_jian =38;
    ///<summary>
  ///排
  ///</summary>
  public static int k_GoodsUnit_pai =39;
    ///<summary>
  ///筒
  ///</summary>
  public static int k_GoodsUnit_tong2 =40;
    ///<summary>
  ///张
  ///</summary>
  public static int k_GoodsUnit_zhang =41;
    ///<summary>
  ///桶
  ///</summary>
  public static int k_GoodsUnit_tong =32;
    ///<summary>
  ///卷
  ///</summary>
  public static int k_GoodsUnit_juan =33;
    ///<summary>
  ///块
  ///</summary>
  public static int k_GoodsUnit_kuai =34;
    ///<summary>
  ///把
  ///</summary>
  public static int k_GoodsUnit_ba =35;
    ///<summary>
  ///套
  ///</summary>
  public static int k_GoodsUnit_tao =27;
    ///<summary>
  ///袋
  ///</summary>
  public static int k_GoodsUnit_dai =28;
    ///<summary>
  ///瓶
  ///</summary>
  public static int k_GoodsUnit_ping =24;
    ///<summary>
  ///盒
  ///</summary>
  public static int k_GoodsUnit_he =25;
    ///<summary>
  ///枚
  ///</summary>
  public static int k_MedicalType_mei =12932;
    ///<summary>
  ///揿
  ///</summary>
  public static int k_MedicalType_qin =12942;
    ///<summary>
  ///罐
  ///</summary>
  public static int k_GoodsUnit_Guan =12962;
    ///<summary>
  ///台
  ///</summary>
  public static int k_GoodsUnit_Tai =12963;
    ///<summary>
  ///包装
  ///</summary>
  public static int k_GoodsUnit_Uone =12964;
    ///<summary>
  ///打
  ///</summary>
  public static int k_GoodsUnit_da =12990;
    ///<summary>
  ///盆
  ///</summary>
  public static int k_GoodsUnit_pen =12991;
    ///<summary>
  ///碗
  ///</summary>
  public static int k_GoodsUnit_wan =12992;
    ///<summary>
  ///听
  ///</summary>
  public static int k_GoodsUnit_ting =12993;
    ///<summary>
  ///次
  ///</summary>
  public static int k_GoodsUnit_ci =12995;
    
  }

 	/// <summary>
	/// 证件类别 
	/// </summary>
    public partial class CertificateType:BaseDictValue{		 
		public CertificateType():base(22,"CertificateType","证件类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12943,"CertificateType_idcard","身份证","idcard",true,false ),					
			new CHIS_Code_Dict_Detail(12967,"CertificateType_sbk","社保卡","sbk",true,false ),					
			new CHIS_Code_Dict_Detail(12944,"CertificateType_httxz","港澳通行证","httxz",true,false ),					
			new CHIS_Code_Dict_Detail(12945,"CertificateType_tbz","台胞证","tbz",true,false ),					
			new CHIS_Code_Dict_Detail(12946,"CertificateType_hz","护照","hz",true,false ),					
			new CHIS_Code_Dict_Detail(12947,"CertificateType_jsz","驾驶证","jsz",true,false ),					
			};
		}
		static CertificateType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static CertificateType Ins(){return _ins??(_ins=new CertificateType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///身份证
  ///</summary>
  public static int k_CertificateType_idcard =12943;
    ///<summary>
  ///社保卡
  ///</summary>
  public static int k_CertificateType_sbk =12967;
    ///<summary>
  ///港澳通行证
  ///</summary>
  public static int k_CertificateType_httxz =12944;
    ///<summary>
  ///台胞证
  ///</summary>
  public static int k_CertificateType_tbz =12945;
    ///<summary>
  ///护照
  ///</summary>
  public static int k_CertificateType_hz =12946;
    ///<summary>
  ///驾驶证
  ///</summary>
  public static int k_CertificateType_jsz =12947;
    
  }

 	/// <summary>
	/// 血型 
	/// </summary>
    public partial class BloodType:BaseDictValue{		 
		public BloodType():base(24,"BloodType","血型",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12768,"1","A","",true,false ),					
			new CHIS_Code_Dict_Detail(12769,"2","B","",true,false ),					
			new CHIS_Code_Dict_Detail(12770,"3","AB","",true,false ),					
			new CHIS_Code_Dict_Detail(12771,"4","O","",true,false ),					
			new CHIS_Code_Dict_Detail(12772,"5","R","",true,false ),					
			};
		}
		static BloodType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static BloodType Ins(){return _ins??(_ins=new BloodType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///A
  ///</summary>
  public static int k_1 =12768;
    ///<summary>
  ///B
  ///</summary>
  public static int k_2 =12769;
    ///<summary>
  ///AB
  ///</summary>
  public static int k_3 =12770;
    ///<summary>
  ///O
  ///</summary>
  public static int k_4 =12771;
    ///<summary>
  ///R
  ///</summary>
  public static int k_5 =12772;
    
  }

 	/// <summary>
	/// 国籍 
	/// </summary>
    public partial class Citizenship:BaseDictValue{		 
		public Citizenship():base(25,"Citizenship","国籍",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12600,"01  ","中国","",true,false ),					
			new CHIS_Code_Dict_Detail(12601,"02  ","中国香港","",true,false ),					
			new CHIS_Code_Dict_Detail(12602,"03  ","中国台湾","",true,false ),					
			new CHIS_Code_Dict_Detail(12603,"04  ","中国澳门","",true,false ),					
			new CHIS_Code_Dict_Detail(12604,"05  ","新加坡","",true,false ),					
			new CHIS_Code_Dict_Detail(12605,"06  ","泰国","",true,false ),					
			new CHIS_Code_Dict_Detail(12606,"07  ","加拿大","",true,false ),					
			new CHIS_Code_Dict_Detail(12607,"08  ","美国","",true,false ),					
			new CHIS_Code_Dict_Detail(12608,"09  ","日本","",true,false ),					
			new CHIS_Code_Dict_Detail(12609,"10  ","尼日利亚","",true,false ),					
			new CHIS_Code_Dict_Detail(12610,"11  ","韩国","",true,false ),					
			new CHIS_Code_Dict_Detail(12611,"12  ","德国","",true,false ),					
			new CHIS_Code_Dict_Detail(12612,"13  ","英国","",true,false ),					
			new CHIS_Code_Dict_Detail(12613,"14  ","法国","",true,false ),					
			new CHIS_Code_Dict_Detail(12614,"15  ","越南","",true,false ),					
			};
		}
		static Citizenship _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Citizenship Ins(){return _ins??(_ins=new Citizenship());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///中国
  ///</summary>
  public static int k_01   =12600;
    ///<summary>
  ///中国香港
  ///</summary>
  public static int k_02   =12601;
    ///<summary>
  ///中国台湾
  ///</summary>
  public static int k_03   =12602;
    ///<summary>
  ///中国澳门
  ///</summary>
  public static int k_04   =12603;
    ///<summary>
  ///新加坡
  ///</summary>
  public static int k_05   =12604;
    ///<summary>
  ///泰国
  ///</summary>
  public static int k_06   =12605;
    ///<summary>
  ///加拿大
  ///</summary>
  public static int k_07   =12606;
    ///<summary>
  ///美国
  ///</summary>
  public static int k_08   =12607;
    ///<summary>
  ///日本
  ///</summary>
  public static int k_09   =12608;
    ///<summary>
  ///尼日利亚
  ///</summary>
  public static int k_10   =12609;
    ///<summary>
  ///韩国
  ///</summary>
  public static int k_11   =12610;
    ///<summary>
  ///德国
  ///</summary>
  public static int k_12   =12611;
    ///<summary>
  ///英国
  ///</summary>
  public static int k_13   =12612;
    ///<summary>
  ///法国
  ///</summary>
  public static int k_14   =12613;
    ///<summary>
  ///越南
  ///</summary>
  public static int k_15   =12614;
    
  }

 	/// <summary>
	/// 民族 
	/// </summary>
    public partial class Nation:BaseDictValue{		 
		public Nation():base(26,"Nation","民族",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12615,"","汉","",true,false ),					
			new CHIS_Code_Dict_Detail(12616,"","藏","",true,false ),					
			new CHIS_Code_Dict_Detail(12617,"","瑶","",true,false ),					
			new CHIS_Code_Dict_Detail(12618,"","彝","",true,false ),					
			new CHIS_Code_Dict_Detail(12619,"","壮","",true,false ),					
			new CHIS_Code_Dict_Detail(12620,"","东乡","",true,false ),					
			new CHIS_Code_Dict_Detail(12621,"","俄罗斯","",true,false ),					
			new CHIS_Code_Dict_Detail(12622,"","赫哲","",true,false ),					
			new CHIS_Code_Dict_Detail(12623,"","柯尔克孜","",true,false ),					
			new CHIS_Code_Dict_Detail(12624,"","白","",true,false ),					
			new CHIS_Code_Dict_Detail(12625,"","鄂温克","",true,false ),					
			new CHIS_Code_Dict_Detail(12626,"","哈尼","",true,false ),					
			new CHIS_Code_Dict_Detail(12627,"","回","",true,false ),					
			new CHIS_Code_Dict_Detail(12628,"","仡佬","",true,false ),					
			new CHIS_Code_Dict_Detail(12629,"","拉枯","",true,false ),					
			new CHIS_Code_Dict_Detail(12630,"","门巴","",true,false ),					
			new CHIS_Code_Dict_Detail(12631,"","维吾尔","",true,false ),					
			new CHIS_Code_Dict_Detail(12632,"","阿昌","",true,false ),					
			new CHIS_Code_Dict_Detail(12633,"","毛南","",true,false ),					
			new CHIS_Code_Dict_Detail(12634,"","布依","",true,false ),					
			new CHIS_Code_Dict_Detail(12635,"","朝鲜","",true,false ),					
			new CHIS_Code_Dict_Detail(12636,"","傣","",true,false ),					
			new CHIS_Code_Dict_Detail(12637,"","侗","",true,false ),					
			new CHIS_Code_Dict_Detail(12638,"","鄂伦春","",true,false ),					
			new CHIS_Code_Dict_Detail(12639,"","黎","",true,false ),					
			new CHIS_Code_Dict_Detail(12640,"","满","",true,false ),					
			new CHIS_Code_Dict_Detail(12641,"","蒙古","",true,false ),					
			new CHIS_Code_Dict_Detail(12642,"","苗","",true,false ),					
			new CHIS_Code_Dict_Detail(12643,"","仫佬","",true,false ),					
			new CHIS_Code_Dict_Detail(12644,"","纳西","",true,false ),					
			new CHIS_Code_Dict_Detail(12645,"","普米","",true,false ),					
			new CHIS_Code_Dict_Detail(12646,"","羌","",true,false ),					
			new CHIS_Code_Dict_Detail(12647,"","撒拉","",true,false ),					
			new CHIS_Code_Dict_Detail(12648,"","畲","",true,false ),					
			new CHIS_Code_Dict_Detail(12649,"","水","",true,false ),					
			new CHIS_Code_Dict_Detail(12650,"","土","",true,false ),					
			new CHIS_Code_Dict_Detail(12651,"","土家","",true,false ),					
			new CHIS_Code_Dict_Detail(12652,"","乌孜别克","",true,false ),					
			new CHIS_Code_Dict_Detail(12653,"","锡伯","",true,false ),					
			};
		}
		static Nation _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Nation Ins(){return _ins??(_ins=new Nation());} 
  //继续载入键名和值，生成属性
    
  }

 	/// <summary>
	/// 婚况 
	/// </summary>
    public partial class Marriage:BaseDictValue{		 
		public Marriage():base(27,"Marriage","婚况",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12655,"Marrage_Not","未婚","Marrage_Not",true,false ),					
			new CHIS_Code_Dict_Detail(12656,"","离异","",true,false ),					
			new CHIS_Code_Dict_Detail(12997,"Marriage_Ing","恋爱","Marriage_Ing",true,false ),					
			new CHIS_Code_Dict_Detail(12654,"","已婚","",true,false ),					
			};
		}
		static Marriage _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Marriage Ins(){return _ins??(_ins=new Marriage());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///未婚
  ///</summary>
  public static int k_Marrage_Not =12655;
    ///<summary>
  ///恋爱
  ///</summary>
  public static int k_Marriage_Ing =12997;
    
  }

 	/// <summary>
	/// 省份 
	/// </summary>
    public partial class Province:BaseDictValue{		 
		public Province():base(28,"Province","省份",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12531,"44","广东","",true,false ),					
			new CHIS_Code_Dict_Detail(12532,"43","湖南","",true,false ),					
			new CHIS_Code_Dict_Detail(12533,"42","湖北","",true,false ),					
			new CHIS_Code_Dict_Detail(12534,"36","江西","",true,false ),					
			new CHIS_Code_Dict_Detail(12535,"51","四川","",true,false ),					
			new CHIS_Code_Dict_Detail(12536,"46","海南","",true,false ),					
			new CHIS_Code_Dict_Detail(12537,"45","广西","",true,false ),					
			new CHIS_Code_Dict_Detail(12538,"23","黑龙江","",true,false ),					
			new CHIS_Code_Dict_Detail(12539,"22","吉林","",true,false ),					
			new CHIS_Code_Dict_Detail(12540,"32","江苏","",true,false ),					
			new CHIS_Code_Dict_Detail(12541,"21","辽宁","",true,false ),					
			new CHIS_Code_Dict_Detail(12542,"33","浙江","",true,false ),					
			new CHIS_Code_Dict_Detail(12543,"62","甘肃","",true,false ),					
			new CHIS_Code_Dict_Detail(12544,"13","河北","",true,false ),					
			new CHIS_Code_Dict_Detail(12545,"37","山东","",true,false ),					
			new CHIS_Code_Dict_Detail(12546,"14","山西","",true,false ),					
			new CHIS_Code_Dict_Detail(12547,"34","安徽","",true,false ),					
			new CHIS_Code_Dict_Detail(12548,"35","福建","",true,false ),					
			new CHIS_Code_Dict_Detail(12549,"52","贵州","",true,false ),					
			new CHIS_Code_Dict_Detail(12550,"41","河南","",true,false ),					
			new CHIS_Code_Dict_Detail(12551,"61","陕西","",true,false ),					
			new CHIS_Code_Dict_Detail(12816,"xj","新疆","22",true,false ),					
			new CHIS_Code_Dict_Detail(12552,"53","云南","",true,false ),					
			new CHIS_Code_Dict_Detail(12815,"65","新疆","",true,false ),					
			new CHIS_Code_Dict_Detail(12817,"54","西藏","23",true,false ),					
			new CHIS_Code_Dict_Detail(12818,"63","青海","24",true,false ),					
			new CHIS_Code_Dict_Detail(12819,"yn","云南","25",true,false ),					
			new CHIS_Code_Dict_Detail(12820,"11","北京","26",true,false ),					
			new CHIS_Code_Dict_Detail(12821,"12","天津","27",true,false ),					
			new CHIS_Code_Dict_Detail(12822,"31","上海","29",true,false ),					
			new CHIS_Code_Dict_Detail(12823,"15","内蒙古","30",true,false ),					
			new CHIS_Code_Dict_Detail(12824,"64","宁夏","31",true,false ),					
			};
		}
		static Province _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Province Ins(){return _ins??(_ins=new Province());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///广东
  ///</summary>
  public static int k_44 =12531;
    ///<summary>
  ///湖南
  ///</summary>
  public static int k_43 =12532;
    ///<summary>
  ///湖北
  ///</summary>
  public static int k_42 =12533;
    ///<summary>
  ///江西
  ///</summary>
  public static int k_36 =12534;
    ///<summary>
  ///四川
  ///</summary>
  public static int k_51 =12535;
    ///<summary>
  ///海南
  ///</summary>
  public static int k_46 =12536;
    ///<summary>
  ///广西
  ///</summary>
  public static int k_45 =12537;
    ///<summary>
  ///黑龙江
  ///</summary>
  public static int k_23 =12538;
    ///<summary>
  ///吉林
  ///</summary>
  public static int k_22 =12539;
    ///<summary>
  ///江苏
  ///</summary>
  public static int k_32 =12540;
    ///<summary>
  ///辽宁
  ///</summary>
  public static int k_21 =12541;
    ///<summary>
  ///浙江
  ///</summary>
  public static int k_33 =12542;
    ///<summary>
  ///甘肃
  ///</summary>
  public static int k_62 =12543;
    ///<summary>
  ///河北
  ///</summary>
  public static int k_13 =12544;
    ///<summary>
  ///山东
  ///</summary>
  public static int k_37 =12545;
    ///<summary>
  ///山西
  ///</summary>
  public static int k_14 =12546;
    ///<summary>
  ///安徽
  ///</summary>
  public static int k_34 =12547;
    ///<summary>
  ///福建
  ///</summary>
  public static int k_35 =12548;
    ///<summary>
  ///贵州
  ///</summary>
  public static int k_52 =12549;
    ///<summary>
  ///河南
  ///</summary>
  public static int k_41 =12550;
    ///<summary>
  ///陕西
  ///</summary>
  public static int k_61 =12551;
    ///<summary>
  ///新疆
  ///</summary>
  public static int k_xj =12816;
    ///<summary>
  ///云南
  ///</summary>
  public static int k_53 =12552;
    ///<summary>
  ///新疆
  ///</summary>
  public static int k_65 =12815;
    ///<summary>
  ///西藏
  ///</summary>
  public static int k_54 =12817;
    ///<summary>
  ///青海
  ///</summary>
  public static int k_63 =12818;
    ///<summary>
  ///云南
  ///</summary>
  public static int k_yn =12819;
    ///<summary>
  ///北京
  ///</summary>
  public static int k_11 =12820;
    ///<summary>
  ///天津
  ///</summary>
  public static int k_12 =12821;
    ///<summary>
  ///上海
  ///</summary>
  public static int k_31 =12822;
    ///<summary>
  ///内蒙古
  ///</summary>
  public static int k_15 =12823;
    ///<summary>
  ///宁夏
  ///</summary>
  public static int k_64 =12824;
    
  }

 	/// <summary>
	/// 职业名称 
	/// </summary>
    public partial class Profession:BaseDictValue{		 
		public Profession():base(29,"Profession","职业名称",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12697,"01  ","中共中央委员会和地方各级组织负责人","",true,false ),					
			new CHIS_Code_Dict_Detail(12698,"02  ","国家机关及其工作机构负责人","",true,false ),					
			new CHIS_Code_Dict_Detail(12699,"03  ","民主党派和社会团体及其工作机构","",true,false ),					
			new CHIS_Code_Dict_Detail(12700,"04  ","事业单位负责人","",true,false ),					
			new CHIS_Code_Dict_Detail(12701,"05  ","企业单位负责人","",true,false ),					
			new CHIS_Code_Dict_Detail(12702,"06  ","工人","",true,false ),					
			new CHIS_Code_Dict_Detail(12703,"07  ","农民","",true,false ),					
			new CHIS_Code_Dict_Detail(12704,"08  ","退休","",true,false ),					
			new CHIS_Code_Dict_Detail(12705,"100 ","公务员","",true,false ),					
			new CHIS_Code_Dict_Detail(12706,"11  ","科学研究人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12707,"13  ","工程技术人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12708,"17  ","农业技术人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12709,"18  ","飞机和传播技术人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12710,"19  ","卫生专业技术人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12711,"21  ","经济业务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12712,"22  ","金融业务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12713,"23  ","法律专业人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12714,"24  ","教学人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12715,"25  ","文学艺术工作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12716,"26  ","体育工作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12717,"27  ","新闻出版、文化工作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12718,"28  ","宗教职业者","",true,false ),					
			new CHIS_Code_Dict_Detail(12719,"29  ","其他专业技术人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12720,"31  ","行政办公人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12721,"32  ","安全保卫和消防人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12722,"33  ","邮电和电信业务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12723,"34  ","婴幼儿、学龄前儿童","",true,false ),					
			new CHIS_Code_Dict_Detail(12724,"35  ","学生","",true,false ),					
			new CHIS_Code_Dict_Detail(12725,"36  ","家务","",true,false ),					
			new CHIS_Code_Dict_Detail(12726,"37  ","待业","",true,false ),					
			new CHIS_Code_Dict_Detail(12727,"38  ","无业","",true,false ),					
			new CHIS_Code_Dict_Detail(12728,"39  ","其他办事人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12729,"41  ","购销人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12730,"42  ","仓储人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12731,"43  ","餐饮服务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12732,"44  ","饭店、旅游及健身娱乐场所人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12733,"45  ","运输服务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12734,"46  ","医疗卫生辅助服务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12735,"47  ","社会服务和居民生活服务人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12736,"49  ","其他商业、服务业人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12737,"51  ","种植生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12738,"52  ","林业生产及野生动物保护人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12739,"53  ","畜牧业生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12740,"54  ","渔业生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12741,"55  ","水利设施管理养护人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12742,"59  ","其他农、林、木、渔、水利生产业","",true,false ),					
			new CHIS_Code_Dict_Detail(12743,"61  ","勘测及矿物开采人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12744,"62  ","金融冶炼、轧制人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12745,"64  ","化工产品生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12746,"66  ","农业机械操作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12747,"67  ","机电产品装配人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12748,"71  ","机械设备修理人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12749,"72  ","电力设备安装、运行、检修及供电人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12750,"73  ","电子元械件与设备制造、装配、调配人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12751,"74  ","橡胶和塑料制品制作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12752,"75  ","纺织、针织、印染工人","",true,false ),					
			new CHIS_Code_Dict_Detail(12753,"76  ","裁剪、缝纫和皮革、毛皮制口加工","",true,false ),					
			new CHIS_Code_Dict_Detail(12754,"77  ","粮油、食品、饮料生产加工及饲料","",true,false ),					
			new CHIS_Code_Dict_Detail(12755,"78  ","烟草及制品加工","",true,false ),					
			new CHIS_Code_Dict_Detail(12756,"79  ","药品生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12757,"81  ","木材加工、人造板生产、木制品制造人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12758,"82  ","建筑材料生产人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12759,"83  ","玻璃、陶瓷、搪将瓷及其制品生产加工人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12760,"84  ","广播影视制品制作播放及文物保护人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12761,"85  ","印刷人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12762,"86  ","工艺、美术制作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12763,"87  ","文化教育、体育用品制作人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12764,"91  ","运输设备操作人员及有关人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12765,"92  ","环境监测与废物处理人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12766,"93  ","检验计量人员","",true,false ),					
			new CHIS_Code_Dict_Detail(12767,"99  ","其他生产运输设备操作人员","",true,false ),					
			};
		}
		static Profession _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Profession Ins(){return _ins??(_ins=new Profession());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///中共中央委员会和地方各级组织负责人
  ///</summary>
  public static int k_01   =12697;
    ///<summary>
  ///国家机关及其工作机构负责人
  ///</summary>
  public static int k_02   =12698;
    ///<summary>
  ///民主党派和社会团体及其工作机构
  ///</summary>
  public static int k_03   =12699;
    ///<summary>
  ///事业单位负责人
  ///</summary>
  public static int k_04   =12700;
    ///<summary>
  ///企业单位负责人
  ///</summary>
  public static int k_05   =12701;
    ///<summary>
  ///工人
  ///</summary>
  public static int k_06   =12702;
    ///<summary>
  ///农民
  ///</summary>
  public static int k_07   =12703;
    ///<summary>
  ///退休
  ///</summary>
  public static int k_08   =12704;
    ///<summary>
  ///公务员
  ///</summary>
  public static int k_100  =12705;
    ///<summary>
  ///科学研究人员
  ///</summary>
  public static int k_11   =12706;
    ///<summary>
  ///工程技术人员
  ///</summary>
  public static int k_13   =12707;
    ///<summary>
  ///农业技术人员
  ///</summary>
  public static int k_17   =12708;
    ///<summary>
  ///飞机和传播技术人员
  ///</summary>
  public static int k_18   =12709;
    ///<summary>
  ///卫生专业技术人员
  ///</summary>
  public static int k_19   =12710;
    ///<summary>
  ///经济业务人员
  ///</summary>
  public static int k_21   =12711;
    ///<summary>
  ///金融业务人员
  ///</summary>
  public static int k_22   =12712;
    ///<summary>
  ///法律专业人员
  ///</summary>
  public static int k_23   =12713;
    ///<summary>
  ///教学人员
  ///</summary>
  public static int k_24   =12714;
    ///<summary>
  ///文学艺术工作人员
  ///</summary>
  public static int k_25   =12715;
    ///<summary>
  ///体育工作人员
  ///</summary>
  public static int k_26   =12716;
    ///<summary>
  ///新闻出版、文化工作人员
  ///</summary>
  public static int k_27   =12717;
    ///<summary>
  ///宗教职业者
  ///</summary>
  public static int k_28   =12718;
    ///<summary>
  ///其他专业技术人员
  ///</summary>
  public static int k_29   =12719;
    ///<summary>
  ///行政办公人员
  ///</summary>
  public static int k_31   =12720;
    ///<summary>
  ///安全保卫和消防人员
  ///</summary>
  public static int k_32   =12721;
    ///<summary>
  ///邮电和电信业务人员
  ///</summary>
  public static int k_33   =12722;
    ///<summary>
  ///婴幼儿、学龄前儿童
  ///</summary>
  public static int k_34   =12723;
    ///<summary>
  ///学生
  ///</summary>
  public static int k_35   =12724;
    ///<summary>
  ///家务
  ///</summary>
  public static int k_36   =12725;
    ///<summary>
  ///待业
  ///</summary>
  public static int k_37   =12726;
    ///<summary>
  ///无业
  ///</summary>
  public static int k_38   =12727;
    ///<summary>
  ///其他办事人员
  ///</summary>
  public static int k_39   =12728;
    ///<summary>
  ///购销人员
  ///</summary>
  public static int k_41   =12729;
    ///<summary>
  ///仓储人员
  ///</summary>
  public static int k_42   =12730;
    ///<summary>
  ///餐饮服务人员
  ///</summary>
  public static int k_43   =12731;
    ///<summary>
  ///饭店、旅游及健身娱乐场所人员
  ///</summary>
  public static int k_44   =12732;
    ///<summary>
  ///运输服务人员
  ///</summary>
  public static int k_45   =12733;
    ///<summary>
  ///医疗卫生辅助服务人员
  ///</summary>
  public static int k_46   =12734;
    ///<summary>
  ///社会服务和居民生活服务人员
  ///</summary>
  public static int k_47   =12735;
    ///<summary>
  ///其他商业、服务业人员
  ///</summary>
  public static int k_49   =12736;
    ///<summary>
  ///种植生产人员
  ///</summary>
  public static int k_51   =12737;
    ///<summary>
  ///林业生产及野生动物保护人员
  ///</summary>
  public static int k_52   =12738;
    ///<summary>
  ///畜牧业生产人员
  ///</summary>
  public static int k_53   =12739;
    ///<summary>
  ///渔业生产人员
  ///</summary>
  public static int k_54   =12740;
    ///<summary>
  ///水利设施管理养护人员
  ///</summary>
  public static int k_55   =12741;
    ///<summary>
  ///其他农、林、木、渔、水利生产业
  ///</summary>
  public static int k_59   =12742;
    ///<summary>
  ///勘测及矿物开采人员
  ///</summary>
  public static int k_61   =12743;
    ///<summary>
  ///金融冶炼、轧制人员
  ///</summary>
  public static int k_62   =12744;
    ///<summary>
  ///化工产品生产人员
  ///</summary>
  public static int k_64   =12745;
    ///<summary>
  ///农业机械操作人员
  ///</summary>
  public static int k_66   =12746;
    ///<summary>
  ///机电产品装配人员
  ///</summary>
  public static int k_67   =12747;
    ///<summary>
  ///机械设备修理人员
  ///</summary>
  public static int k_71   =12748;
    ///<summary>
  ///电力设备安装、运行、检修及供电人员
  ///</summary>
  public static int k_72   =12749;
    ///<summary>
  ///电子元械件与设备制造、装配、调配人员
  ///</summary>
  public static int k_73   =12750;
    ///<summary>
  ///橡胶和塑料制品制作人员
  ///</summary>
  public static int k_74   =12751;
    ///<summary>
  ///纺织、针织、印染工人
  ///</summary>
  public static int k_75   =12752;
    ///<summary>
  ///裁剪、缝纫和皮革、毛皮制口加工
  ///</summary>
  public static int k_76   =12753;
    ///<summary>
  ///粮油、食品、饮料生产加工及饲料
  ///</summary>
  public static int k_77   =12754;
    ///<summary>
  ///烟草及制品加工
  ///</summary>
  public static int k_78   =12755;
    ///<summary>
  ///药品生产人员
  ///</summary>
  public static int k_79   =12756;
    ///<summary>
  ///木材加工、人造板生产、木制品制造人员
  ///</summary>
  public static int k_81   =12757;
    ///<summary>
  ///建筑材料生产人员
  ///</summary>
  public static int k_82   =12758;
    ///<summary>
  ///玻璃、陶瓷、搪将瓷及其制品生产加工人员
  ///</summary>
  public static int k_83   =12759;
    ///<summary>
  ///广播影视制品制作播放及文物保护人员
  ///</summary>
  public static int k_84   =12760;
    ///<summary>
  ///印刷人员
  ///</summary>
  public static int k_85   =12761;
    ///<summary>
  ///工艺、美术制作人员
  ///</summary>
  public static int k_86   =12762;
    ///<summary>
  ///文化教育、体育用品制作人员
  ///</summary>
  public static int k_87   =12763;
    ///<summary>
  ///运输设备操作人员及有关人员
  ///</summary>
  public static int k_91   =12764;
    ///<summary>
  ///环境监测与废物处理人员
  ///</summary>
  public static int k_92   =12765;
    ///<summary>
  ///检验计量人员
  ///</summary>
  public static int k_93   =12766;
    ///<summary>
  ///其他生产运输设备操作人员
  ///</summary>
  public static int k_99   =12767;
    
  }

 	/// <summary>
	/// 教育程度 
	/// </summary>
    public partial class EduLevel:BaseDictValue{		 
		public EduLevel():base(30,"EduLevel","教育程度",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12567,"","本科","",true,false ),					
			new CHIS_Code_Dict_Detail(12569,"","大专","",true,false ),					
			new CHIS_Code_Dict_Detail(12570,"","高中","",true,false ),					
			new CHIS_Code_Dict_Detail(12571,"","初中","",true,false ),					
			new CHIS_Code_Dict_Detail(12572,"","硕士","",true,false ),					
			new CHIS_Code_Dict_Detail(12573,"","博士","",true,false ),					
			new CHIS_Code_Dict_Detail(12807,"EduLevel_0","其他","0",true,false ),					
			};
		}
		static EduLevel _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static EduLevel Ins(){return _ins??(_ins=new EduLevel());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///其他
  ///</summary>
  public static int k_EduLevel_0 =12807;
    
  }

 	/// <summary>
	/// 费用类别 
	/// </summary>
    public partial class FeeType:BaseDictValue{		 
		public FeeType():base(32,"FeeType","费用类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(65,"FeeType_Self","自费","0",true,true ),					
			new CHIS_Code_Dict_Detail(12872,"FeeType_weixing","微信支付","1",true,false ),					
			};
		}
		static FeeType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static FeeType Ins(){return _ins??(_ins=new FeeType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///自费
  ///</summary>
  public static int k_FeeType_Self =65;
    ///<summary>
  ///微信支付
  ///</summary>
  public static int k_FeeType_weixing =12872;
    
  }

 	/// <summary>
	/// 优惠类别 
	/// </summary>
    public partial class PriceType:BaseDictValue{		 
		public PriceType():base(33,"PriceType","优惠类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12574,"1","特惠","",true,false ),					
			new CHIS_Code_Dict_Detail(12575,"2","无","",true,false ),					
			};
		}
		static PriceType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static PriceType Ins(){return _ins??(_ins=new PriceType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///特惠
  ///</summary>
  public static int k_1 =12574;
    ///<summary>
  ///无
  ///</summary>
  public static int k_2 =12575;
    
  }

 	/// <summary>
	/// 职称 
	/// </summary>
    public partial class PostTitle:BaseDictValue{		 
		public PostTitle():base(34,"PostTitle","职称",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12657,"01  ","主任医师","01",true,false ),					
			new CHIS_Code_Dict_Detail(12658,"02  ","副主任医师","02",true,false ),					
			new CHIS_Code_Dict_Detail(12659,"03  ","主治医师","03",true,false ),					
			new CHIS_Code_Dict_Detail(12660,"04  ","医师","04",true,false ),					
			new CHIS_Code_Dict_Detail(12661,"05  ","医士","05",true,false ),					
			new CHIS_Code_Dict_Detail(12662,"051 ","实习生","051",true,false ),					
			new CHIS_Code_Dict_Detail(12663,"06  ","主管护师","",true,false ),					
			new CHIS_Code_Dict_Detail(12664,"07  ","护师","",true,false ),					
			new CHIS_Code_Dict_Detail(12665,"08  ","护士","",true,false ),					
			new CHIS_Code_Dict_Detail(12666,"09  ","助产士","",true,false ),					
			new CHIS_Code_Dict_Detail(12667,"10  ","主管技师","",true,false ),					
			new CHIS_Code_Dict_Detail(12679,"PostTitle_clerk","店员","clerk",true,false ),					
			new CHIS_Code_Dict_Detail(12668,"11  ","主管药师","",true,false ),					
			new CHIS_Code_Dict_Detail(12669,"12  ","主管检验师","",true,false ),					
			new CHIS_Code_Dict_Detail(12670,"13  ","副主任中医师","",true,false ),					
			new CHIS_Code_Dict_Detail(12671,"14  ","中医师","",true,false ),					
			new CHIS_Code_Dict_Detail(12672,"15  ","副主任药师","",true,false ),					
			new CHIS_Code_Dict_Detail(12673,"16  ","药师","",true,false ),					
			new CHIS_Code_Dict_Detail(12674,"17  ","副主任技师","",true,false ),					
			new CHIS_Code_Dict_Detail(12675,"18  ","技师","",true,false ),					
			new CHIS_Code_Dict_Detail(12676,"19  ","药剂师","",true,false ),					
			new CHIS_Code_Dict_Detail(12677,"20  ","中药师","",true,false ),					
			new CHIS_Code_Dict_Detail(12678,"21  ","检验师","",true,false ),					
			new CHIS_Code_Dict_Detail(12680,"23  ","实验师","",true,false ),					
			new CHIS_Code_Dict_Detail(12681,"24  ","麻醉医师","",true,false ),					
			new CHIS_Code_Dict_Detail(12682,"25  ","Ｘ光医师","",true,false ),					
			new CHIS_Code_Dict_Detail(12683,"26  ","药剂士","",true,false ),					
			new CHIS_Code_Dict_Detail(12684,"27  ","中药士","",true,false ),					
			new CHIS_Code_Dict_Detail(12685,"28  ","检验士","",true,false ),					
			new CHIS_Code_Dict_Detail(12686,"29  ","未定职","",true,false ),					
			new CHIS_Code_Dict_Detail(12687,"30  ","见习期","",true,false ),					
			new CHIS_Code_Dict_Detail(12688,"31  ","会计员","",true,false ),					
			new CHIS_Code_Dict_Detail(12689,"32  ","技术员","",true,false ),					
			new CHIS_Code_Dict_Detail(12690,"33  ","助理工程师","",true,false ),					
			new CHIS_Code_Dict_Detail(12691,"34  ","统计员","",true,false ),					
			new CHIS_Code_Dict_Detail(12836,"PostTitle_mgr","经理","mgr",true,false ),					
			};
		}
		static PostTitle _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static PostTitle Ins(){return _ins??(_ins=new PostTitle());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///主任医师
  ///</summary>
  public static int k_01   =12657;
    ///<summary>
  ///副主任医师
  ///</summary>
  public static int k_02   =12658;
    ///<summary>
  ///主治医师
  ///</summary>
  public static int k_03   =12659;
    ///<summary>
  ///医师
  ///</summary>
  public static int k_04   =12660;
    ///<summary>
  ///医士
  ///</summary>
  public static int k_05   =12661;
    ///<summary>
  ///实习生
  ///</summary>
  public static int k_051  =12662;
    ///<summary>
  ///主管护师
  ///</summary>
  public static int k_06   =12663;
    ///<summary>
  ///护师
  ///</summary>
  public static int k_07   =12664;
    ///<summary>
  ///护士
  ///</summary>
  public static int k_08   =12665;
    ///<summary>
  ///助产士
  ///</summary>
  public static int k_09   =12666;
    ///<summary>
  ///主管技师
  ///</summary>
  public static int k_10   =12667;
    ///<summary>
  ///店员
  ///</summary>
  public static int k_PostTitle_clerk =12679;
    ///<summary>
  ///主管药师
  ///</summary>
  public static int k_11   =12668;
    ///<summary>
  ///主管检验师
  ///</summary>
  public static int k_12   =12669;
    ///<summary>
  ///副主任中医师
  ///</summary>
  public static int k_13   =12670;
    ///<summary>
  ///中医师
  ///</summary>
  public static int k_14   =12671;
    ///<summary>
  ///副主任药师
  ///</summary>
  public static int k_15   =12672;
    ///<summary>
  ///药师
  ///</summary>
  public static int k_16   =12673;
    ///<summary>
  ///副主任技师
  ///</summary>
  public static int k_17   =12674;
    ///<summary>
  ///技师
  ///</summary>
  public static int k_18   =12675;
    ///<summary>
  ///药剂师
  ///</summary>
  public static int k_19   =12676;
    ///<summary>
  ///中药师
  ///</summary>
  public static int k_20   =12677;
    ///<summary>
  ///检验师
  ///</summary>
  public static int k_21   =12678;
    ///<summary>
  ///实验师
  ///</summary>
  public static int k_23   =12680;
    ///<summary>
  ///麻醉医师
  ///</summary>
  public static int k_24   =12681;
    ///<summary>
  ///Ｘ光医师
  ///</summary>
  public static int k_25   =12682;
    ///<summary>
  ///药剂士
  ///</summary>
  public static int k_26   =12683;
    ///<summary>
  ///中药士
  ///</summary>
  public static int k_27   =12684;
    ///<summary>
  ///检验士
  ///</summary>
  public static int k_28   =12685;
    ///<summary>
  ///未定职
  ///</summary>
  public static int k_29   =12686;
    ///<summary>
  ///见习期
  ///</summary>
  public static int k_30   =12687;
    ///<summary>
  ///会计员
  ///</summary>
  public static int k_31   =12688;
    ///<summary>
  ///技术员
  ///</summary>
  public static int k_32   =12689;
    ///<summary>
  ///助理工程师
  ///</summary>
  public static int k_33   =12690;
    ///<summary>
  ///统计员
  ///</summary>
  public static int k_34   =12691;
    ///<summary>
  ///经理
  ///</summary>
  public static int k_PostTitle_mgr =12836;
    
  }

 	/// <summary>
	/// 基本症状 描述患者的基本症状
	/// </summary>
    public partial class BasicSymptom:BaseDictValue{		 
		public BasicSymptom():base(35,"BasicSymptom","基本症状",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(73,"BasicSymptom_TouYun","头晕","1",true,false ),					
			new CHIS_Code_Dict_Detail(74,"BasicSymptom_TouTeng","头痛","2",true,false ),					
			new CHIS_Code_Dict_Detail(75,"BasicSymptom_XinJi","心悸","3",true,false ),					
			new CHIS_Code_Dict_Detail(76,"BasicSymptom_XiongMen","胸闷","4",true,false ),					
			new CHIS_Code_Dict_Detail(77,"BasicSymptom_XiongTong","胸痛","5",true,false ),					
			new CHIS_Code_Dict_Detail(78,"BasicSymptom_kesou","咳嗽","6",true,false ),					
			new CHIS_Code_Dict_Detail(85,"BasicSymptom_duoyin","多饮","7",true,false ),					
			new CHIS_Code_Dict_Detail(86,"BasicSymptom_duoniao","多尿","8",true,false ),					
			new CHIS_Code_Dict_Detail(87,"BasicSymptom_fali","乏力","9",true,false ),					
			new CHIS_Code_Dict_Detail(88,"BasicSymptom_xiaoshou","消瘦","10",true,false ),					
			new CHIS_Code_Dict_Detail(89,"BasicSymptom_niaotong","尿痛","11",true,false ),					
			new CHIS_Code_Dict_Detail(90,"BasicSymptom_bianmi","便秘","12",true,false ),					
			new CHIS_Code_Dict_Detail(91,"BasicSymptom_fuxie","腹泻","13",true,false ),					
			new CHIS_Code_Dict_Detail(92,"BasicSymptom_yanhua","眼花","14",true,false ),					
			new CHIS_Code_Dict_Detail(93,"BasicSymptom_erming","耳鸣","15",true,false ),					
			new CHIS_Code_Dict_Detail(94,"BasicSymptom_fare","发热","16",true,false ),					
			new CHIS_Code_Dict_Detail(95,"BasicSymptom_binv","鼻衄","17",true,false ),					
			new CHIS_Code_Dict_Detail(96,"BasicSymptom_fuzhong","浮肿","18",true,false ),					
			new CHIS_Code_Dict_Detail(97,"BasicSymptom_duoshi","多食","19",true,false ),					
			new CHIS_Code_Dict_Detail(98,"BasicSymptom_pizhen","皮疹","20",true,false ),					
			new CHIS_Code_Dict_Detail(99,"BasicSymptom_huxikunnan","呼吸困难","21",true,false ),					
			new CHIS_Code_Dict_Detail(100,"BasicSymptom_tizhongxiajiang","体重下降","22",true,false ),					
			new CHIS_Code_Dict_Detail(101,"BasicSymptom_guanjiezhongtong","关节肿痛","23",true,false ),					
			new CHIS_Code_Dict_Detail(102,"BasicSymptom_shilimohu","视力模糊","24",true,false ),					
			new CHIS_Code_Dict_Detail(103,"BasicSymptom_sizhimamu","四肢麻木","25",true,false ),					
			new CHIS_Code_Dict_Detail(104,"BasicSymptom_exinoutu","恶心呕吐","26",true,false ),					
			};
		}
		static BasicSymptom _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static BasicSymptom Ins(){return _ins??(_ins=new BasicSymptom());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///头晕
  ///</summary>
  public static int k_BasicSymptom_TouYun =73;
    ///<summary>
  ///头痛
  ///</summary>
  public static int k_BasicSymptom_TouTeng =74;
    ///<summary>
  ///心悸
  ///</summary>
  public static int k_BasicSymptom_XinJi =75;
    ///<summary>
  ///胸闷
  ///</summary>
  public static int k_BasicSymptom_XiongMen =76;
    ///<summary>
  ///胸痛
  ///</summary>
  public static int k_BasicSymptom_XiongTong =77;
    ///<summary>
  ///咳嗽
  ///</summary>
  public static int k_BasicSymptom_kesou =78;
    ///<summary>
  ///多饮
  ///</summary>
  public static int k_BasicSymptom_duoyin =85;
    ///<summary>
  ///多尿
  ///</summary>
  public static int k_BasicSymptom_duoniao =86;
    ///<summary>
  ///乏力
  ///</summary>
  public static int k_BasicSymptom_fali =87;
    ///<summary>
  ///消瘦
  ///</summary>
  public static int k_BasicSymptom_xiaoshou =88;
    ///<summary>
  ///尿痛
  ///</summary>
  public static int k_BasicSymptom_niaotong =89;
    ///<summary>
  ///便秘
  ///</summary>
  public static int k_BasicSymptom_bianmi =90;
    ///<summary>
  ///腹泻
  ///</summary>
  public static int k_BasicSymptom_fuxie =91;
    ///<summary>
  ///眼花
  ///</summary>
  public static int k_BasicSymptom_yanhua =92;
    ///<summary>
  ///耳鸣
  ///</summary>
  public static int k_BasicSymptom_erming =93;
    ///<summary>
  ///发热
  ///</summary>
  public static int k_BasicSymptom_fare =94;
    ///<summary>
  ///鼻衄
  ///</summary>
  public static int k_BasicSymptom_binv =95;
    ///<summary>
  ///浮肿
  ///</summary>
  public static int k_BasicSymptom_fuzhong =96;
    ///<summary>
  ///多食
  ///</summary>
  public static int k_BasicSymptom_duoshi =97;
    ///<summary>
  ///皮疹
  ///</summary>
  public static int k_BasicSymptom_pizhen =98;
    ///<summary>
  ///呼吸困难
  ///</summary>
  public static int k_BasicSymptom_huxikunnan =99;
    ///<summary>
  ///体重下降
  ///</summary>
  public static int k_BasicSymptom_tizhongxiajiang =100;
    ///<summary>
  ///关节肿痛
  ///</summary>
  public static int k_BasicSymptom_guanjiezhongtong =101;
    ///<summary>
  ///视力模糊
  ///</summary>
  public static int k_BasicSymptom_shilimohu =102;
    ///<summary>
  ///四肢麻木
  ///</summary>
  public static int k_BasicSymptom_sizhimamu =103;
    ///<summary>
  ///恶心呕吐
  ///</summary>
  public static int k_BasicSymptom_exinoutu =104;
    
  }

 	/// <summary>
	/// 诊断状态 
	/// </summary>
    public partial class DiagnoseStatus:BaseDictValue{		 
		public DiagnoseStatus():base(36,"DiagnoseStatus","诊断状态",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(79,"DiagnoseStatus_1","确诊","1",true,true ),					
			new CHIS_Code_Dict_Detail(80,"DiagnoseStatus_2","待确诊","2",true,false ),					
			};
		}
		static DiagnoseStatus _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DiagnoseStatus Ins(){return _ins??(_ins=new DiagnoseStatus());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///确诊
  ///</summary>
  public static int k_DiagnoseStatus_1 =79;
    ///<summary>
  ///待确诊
  ///</summary>
  public static int k_DiagnoseStatus_2 =80;
    
  }

 	/// <summary>
	/// 体温来源 
	/// </summary>
    public partial class TemperatureSrc:BaseDictValue{		 
		public TemperatureSrc():base(37,"TemperatureSrc","体温来源",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(83,"TemperatureSrc_Oxter","腋下","1",true,false ),					
			new CHIS_Code_Dict_Detail(82,"TemperatureSrc_Mouse","口腔","2",true,false ),					
			new CHIS_Code_Dict_Detail(81,"TemperatureSrc_Head","额头","3",true,false ),					
			new CHIS_Code_Dict_Detail(84,"TemperatureSrc_Anus","肛门","4",true,false ),					
			};
		}
		static TemperatureSrc _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static TemperatureSrc Ins(){return _ins??(_ins=new TemperatureSrc());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///腋下
  ///</summary>
  public static int k_TemperatureSrc_Oxter =83;
    ///<summary>
  ///口腔
  ///</summary>
  public static int k_TemperatureSrc_Mouse =82;
    ///<summary>
  ///额头
  ///</summary>
  public static int k_TemperatureSrc_Head =81;
    ///<summary>
  ///肛门
  ///</summary>
  public static int k_TemperatureSrc_Anus =84;
    
  }

 	/// <summary>
	/// 诊断结论 
	/// </summary>
    public partial class Diagnosis:BaseDictValue{		 
		public Diagnosis():base(38,"Diagnosis","诊断结论",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			};
		}
		static Diagnosis _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Diagnosis Ins(){return _ins??(_ins=new Diagnosis());} 
  //继续载入键名和值，生成属性
    
  }

 	/// <summary>
	/// 接诊状态 
	/// </summary>
    public partial class TreatStatus:BaseDictValue{		 
		public TreatStatus():base(39,"TreatStatus","接诊状态",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12528,"TreatStatus_0","候诊","0",true,false ),					
			new CHIS_Code_Dict_Detail(12529,"TreatStatus_1","在诊","1",true,false ),					
			new CHIS_Code_Dict_Detail(12530,"TreatStatus_2","已诊","2",true,false ),					
			};
		}
		static TreatStatus _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static TreatStatus Ins(){return _ins??(_ins=new TreatStatus());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///候诊
  ///</summary>
  public static int k_TreatStatus_0 =12528;
    ///<summary>
  ///在诊
  ///</summary>
  public static int k_TreatStatus_1 =12529;
    ///<summary>
  ///已诊
  ///</summary>
  public static int k_TreatStatus_2 =12530;
    
  }

 	/// <summary>
	/// 职位 
	/// </summary>
    public partial class Principalship:BaseDictValue{		 
		public Principalship():base(40,"Principalship","职位",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12553,"a","医生","doctor",true,false ),					
			new CHIS_Code_Dict_Detail(13006,"Principalship_adoctr","医生助理","adoctr",true,false ),					
			new CHIS_Code_Dict_Detail(12554,"b","护士","nurse",true,false ),					
			new CHIS_Code_Dict_Detail(12557,"c","护工","hg",true,false ),					
			new CHIS_Code_Dict_Detail(12999,"Principalship_clerk","店员","Principalship_clerk",true,false ),					
			new CHIS_Code_Dict_Detail(12869,"Principalship_kj","会计","kj",true,false ),					
			new CHIS_Code_Dict_Detail(12558,"d","行政人员","mgr",true,false ),					
			new CHIS_Code_Dict_Detail(12559,"e","后勤人员","hq",true,false ),					
			new CHIS_Code_Dict_Detail(12870,"Principalship_qt","其他","Principalship_qt",true,false ),					
			};
		}
		static Principalship _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Principalship Ins(){return _ins??(_ins=new Principalship());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///医生
  ///</summary>
  public static int k_a =12553;
    ///<summary>
  ///医生助理
  ///</summary>
  public static int k_Principalship_adoctr =13006;
    ///<summary>
  ///护士
  ///</summary>
  public static int k_b =12554;
    ///<summary>
  ///护工
  ///</summary>
  public static int k_c =12557;
    ///<summary>
  ///店员
  ///</summary>
  public static int k_Principalship_clerk =12999;
    ///<summary>
  ///会计
  ///</summary>
  public static int k_Principalship_kj =12869;
    ///<summary>
  ///行政人员
  ///</summary>
  public static int k_d =12558;
    ///<summary>
  ///后勤人员
  ///</summary>
  public static int k_e =12559;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_Principalship_qt =12870;
    
  }

 	/// <summary>
	/// 关系 
	/// </summary>
    public partial class Relation:BaseDictValue{		 
		public Relation():base(41,"Relation","关系",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12576,"0   ","本人","",true,false ),					
			new CHIS_Code_Dict_Detail(12577,"1   ","配偶","",true,false ),					
			new CHIS_Code_Dict_Detail(12578,"10  ","同事","",true,false ),					
			new CHIS_Code_Dict_Detail(12579,"11  ","同乡","",true,false ),					
			new CHIS_Code_Dict_Detail(12580,"12  ","朋友","",true,false ),					
			new CHIS_Code_Dict_Detail(12581,"13  ","情侣","",true,false ),					
			new CHIS_Code_Dict_Detail(12582,"14  ","上下级","",true,false ),					
			new CHIS_Code_Dict_Detail(12583,"15  ","雇佣","",true,false ),					
			new CHIS_Code_Dict_Detail(12584,"16  ","婆媳","",true,false ),					
			new CHIS_Code_Dict_Detail(12585,"17  ","翁媳","",true,false ),					
			new CHIS_Code_Dict_Detail(12586,"18  ","亲戚","",true,false ),					
			new CHIS_Code_Dict_Detail(12587,"19  ","父女","",true,false ),					
			new CHIS_Code_Dict_Detail(12588,"2   ","子","",true,false ),					
			new CHIS_Code_Dict_Detail(12589,"20  ","母女","",true,false ),					
			new CHIS_Code_Dict_Detail(12590,"21  ","父子","",true,false ),					
			new CHIS_Code_Dict_Detail(12591,"22  ","母子","",true,false ),					
			new CHIS_Code_Dict_Detail(12592,"23  ","其他","",true,false ),					
			new CHIS_Code_Dict_Detail(12593,"3   ","女","",true,false ),					
			new CHIS_Code_Dict_Detail(12594,"4   ","孙子、孙女","",true,false ),					
			new CHIS_Code_Dict_Detail(12595,"5   ","父母","",true,false ),					
			new CHIS_Code_Dict_Detail(12596,"6   ","兄弟","",true,false ),					
			new CHIS_Code_Dict_Detail(12597,"7   ","姐妹","",true,false ),					
			new CHIS_Code_Dict_Detail(12598,"8   ","兄妹","",true,false ),					
			new CHIS_Code_Dict_Detail(12599,"9   ","姐弟","",true,false ),					
			};
		}
		static Relation _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static Relation Ins(){return _ins??(_ins=new Relation());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///本人
  ///</summary>
  public static int k_0    =12576;
    ///<summary>
  ///配偶
  ///</summary>
  public static int k_1    =12577;
    ///<summary>
  ///同事
  ///</summary>
  public static int k_10   =12578;
    ///<summary>
  ///同乡
  ///</summary>
  public static int k_11   =12579;
    ///<summary>
  ///朋友
  ///</summary>
  public static int k_12   =12580;
    ///<summary>
  ///情侣
  ///</summary>
  public static int k_13   =12581;
    ///<summary>
  ///上下级
  ///</summary>
  public static int k_14   =12582;
    ///<summary>
  ///雇佣
  ///</summary>
  public static int k_15   =12583;
    ///<summary>
  ///婆媳
  ///</summary>
  public static int k_16   =12584;
    ///<summary>
  ///翁媳
  ///</summary>
  public static int k_17   =12585;
    ///<summary>
  ///亲戚
  ///</summary>
  public static int k_18   =12586;
    ///<summary>
  ///父女
  ///</summary>
  public static int k_19   =12587;
    ///<summary>
  ///子
  ///</summary>
  public static int k_2    =12588;
    ///<summary>
  ///母女
  ///</summary>
  public static int k_20   =12589;
    ///<summary>
  ///父子
  ///</summary>
  public static int k_21   =12590;
    ///<summary>
  ///母子
  ///</summary>
  public static int k_22   =12591;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_23   =12592;
    ///<summary>
  ///女
  ///</summary>
  public static int k_3    =12593;
    ///<summary>
  ///孙子、孙女
  ///</summary>
  public static int k_4    =12594;
    ///<summary>
  ///父母
  ///</summary>
  public static int k_5    =12595;
    ///<summary>
  ///兄弟
  ///</summary>
  public static int k_6    =12596;
    ///<summary>
  ///姐妹
  ///</summary>
  public static int k_7    =12597;
    ///<summary>
  ///兄妹
  ///</summary>
  public static int k_8    =12598;
    ///<summary>
  ///姐弟
  ///</summary>
  public static int k_9    =12599;
    
  }

 	/// <summary>
	/// 特殊病人 
	/// </summary>
    public partial class SpecialPatient:BaseDictValue{		 
		public SpecialPatient():base(42,"SpecialPatient","特殊病人",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12692,"1","无","",true,false ),					
			new CHIS_Code_Dict_Detail(12693,"azb","艾滋病","azb",true,false ),					
			new CHIS_Code_Dict_Detail(12694,"crb","传染病","crb",true,false ),					
			new CHIS_Code_Dict_Detail(12695,"jsb","精神病","jsb",true,false ),					
			new CHIS_Code_Dict_Detail(12696,"mfb","麻风病","mfb",true,false ),					
			};
		}
		static SpecialPatient _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static SpecialPatient Ins(){return _ins??(_ins=new SpecialPatient());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///无
  ///</summary>
  public static int k_1 =12692;
    ///<summary>
  ///艾滋病
  ///</summary>
  public static int k_azb =12693;
    ///<summary>
  ///传染病
  ///</summary>
  public static int k_crb =12694;
    ///<summary>
  ///精神病
  ///</summary>
  public static int k_jsb =12695;
    ///<summary>
  ///麻风病
  ///</summary>
  public static int k_mfb =12696;
    
  }

 	/// <summary>
	/// 中药类别 
	/// </summary>
    public partial class CnHerbType:BaseDictValue{		 
		public CnHerbType():base(43,"CnHerbType","中药类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12775,"CnHerbType_1","中成药","1",true,false ),					
			new CHIS_Code_Dict_Detail(12776,"CnHerbType_2","水煎药","2",true,false ),					
			new CHIS_Code_Dict_Detail(12777,"CnHerbType_3","丸药","3",true,false ),					
			new CHIS_Code_Dict_Detail(12778,"CnHerbType_4","酒药","4",true,false ),					
			};
		}
		static CnHerbType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static CnHerbType Ins(){return _ins??(_ins=new CnHerbType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///中成药
  ///</summary>
  public static int k_CnHerbType_1 =12775;
    ///<summary>
  ///水煎药
  ///</summary>
  public static int k_CnHerbType_2 =12776;
    ///<summary>
  ///丸药
  ///</summary>
  public static int k_CnHerbType_3 =12777;
    ///<summary>
  ///酒药
  ///</summary>
  public static int k_CnHerbType_4 =12778;
    
  }

 	/// <summary>
	/// 给药时间方式 
	/// </summary>
    public partial class DrugGivenTimeType:BaseDictValue{		 
		public DrugGivenTimeType():base(44,"DrugGivenTimeType","给药时间方式",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			};
		}
		static DrugGivenTimeType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DrugGivenTimeType Ins(){return _ins??(_ins=new DrugGivenTimeType());} 
  //继续载入键名和值，生成属性
    
  }

 	/// <summary>
	/// 给药使用方式 
	/// </summary>
    public partial class DrugGivenWhereType:BaseDictValue{		 
		public DrugGivenWhereType():base(45,"DrugGivenWhereType","给药使用方式",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12783,"DrugGivenWhereType_po","po(口服)","po",true,false ),					
			new CHIS_Code_Dict_Detail(12784,"DrugGivenWhereType_1","外用","1",true,false ),					
			new CHIS_Code_Dict_Detail(12799,"DrugGivenWhereType_ivgtt","iv gtt.(静脉滴注)","ivgtt",true,false ),					
			new CHIS_Code_Dict_Detail(12803,"DrugGivenWhereType_H","H.(注射-皮下)","h",true,false ),					
			new CHIS_Code_Dict_Detail(12998,"DrugGivenWhereType_hf","含服","DrugGivenWhereType_hf",true,false ),					
			new CHIS_Code_Dict_Detail(12785,"DrugGivenWhereType_4","沐浴","4",true,false ),					
			new CHIS_Code_Dict_Detail(12863,"DrugGivenWhereType_im","im/M.(注射-肌肉)","im",true,false ),					
			new CHIS_Code_Dict_Detail(12864,"DrugGivenWhereType_iv","iv/V.(注射-肌肉)","iv",true,false ),					
			new CHIS_Code_Dict_Detail(12865,"DrugGivenWhereType_ID","ID.(注射-皮内)","ID",true,false ),					
			new CHIS_Code_Dict_Detail(12866,"DrugGivenWhereType_Inhal","Inhal.(吸入)","Inhal",true,false ),					
			new CHIS_Code_Dict_Detail(12884,"DrugGivenWhereType_bisi","鼻饲","bisi",true,false ),					
			new CHIS_Code_Dict_Detail(12885,"DrugGivenWhereType_cswh","超声雾化","cswh",true,false ),					
			new CHIS_Code_Dict_Detail(12886,"DrugGivenWhereType_db","滴鼻","db",true,false ),					
			new CHIS_Code_Dict_Detail(12887,"DrugGivenWhereType_dier","滴耳","dier",true,false ),					
			new CHIS_Code_Dict_Detail(12888,"DrugGivenWhereType_dy","滴眼","dy",true,false ),					
			new CHIS_Code_Dict_Detail(12889,"DrugGivenWhereType_jm","局麻","juma",true,false ),					
			new CHIS_Code_Dict_Detail(12890,"DrugGivenWhereType_mzy","麻醉用","mzy",true,false ),					
			new CHIS_Code_Dict_Detail(12891,"DrugGivenWhereType_pb","喷鼻","pb",true,false ),					
			new CHIS_Code_Dict_Detail(12892,"DrugGivenWhereType_rg","入肛","rg",true,false ),					
			new CHIS_Code_Dict_Detail(12893,"DrugGivenWhereType_stbzs","双臀部注射","stbzs",true,false ),					
			};
		}
		static DrugGivenWhereType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DrugGivenWhereType Ins(){return _ins??(_ins=new DrugGivenWhereType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///po(口服)
  ///</summary>
  public static int k_DrugGivenWhereType_po =12783;
    ///<summary>
  ///外用
  ///</summary>
  public static int k_DrugGivenWhereType_1 =12784;
    ///<summary>
  ///iv gtt.(静脉滴注)
  ///</summary>
  public static int k_DrugGivenWhereType_ivgtt =12799;
    ///<summary>
  ///H.(注射-皮下)
  ///</summary>
  public static int k_DrugGivenWhereType_H =12803;
    ///<summary>
  ///含服
  ///</summary>
  public static int k_DrugGivenWhereType_hf =12998;
    ///<summary>
  ///沐浴
  ///</summary>
  public static int k_DrugGivenWhereType_4 =12785;
    ///<summary>
  ///im/M.(注射-肌肉)
  ///</summary>
  public static int k_DrugGivenWhereType_im =12863;
    ///<summary>
  ///iv/V.(注射-肌肉)
  ///</summary>
  public static int k_DrugGivenWhereType_iv =12864;
    ///<summary>
  ///ID.(注射-皮内)
  ///</summary>
  public static int k_DrugGivenWhereType_ID =12865;
    ///<summary>
  ///Inhal.(吸入)
  ///</summary>
  public static int k_DrugGivenWhereType_Inhal =12866;
    ///<summary>
  ///鼻饲
  ///</summary>
  public static int k_DrugGivenWhereType_bisi =12884;
    ///<summary>
  ///超声雾化
  ///</summary>
  public static int k_DrugGivenWhereType_cswh =12885;
    ///<summary>
  ///滴鼻
  ///</summary>
  public static int k_DrugGivenWhereType_db =12886;
    ///<summary>
  ///滴耳
  ///</summary>
  public static int k_DrugGivenWhereType_dier =12887;
    ///<summary>
  ///滴眼
  ///</summary>
  public static int k_DrugGivenWhereType_dy =12888;
    ///<summary>
  ///局麻
  ///</summary>
  public static int k_DrugGivenWhereType_jm =12889;
    ///<summary>
  ///麻醉用
  ///</summary>
  public static int k_DrugGivenWhereType_mzy =12890;
    ///<summary>
  ///喷鼻
  ///</summary>
  public static int k_DrugGivenWhereType_pb =12891;
    ///<summary>
  ///入肛
  ///</summary>
  public static int k_DrugGivenWhereType_rg =12892;
    ///<summary>
  ///双臀部注射
  ///</summary>
  public static int k_DrugGivenWhereType_stbzs =12893;
    
  }

 	/// <summary>
	/// 给药用量方式 
	/// </summary>
    public partial class DrugGivenTakeType:BaseDictValue{		 
		public DrugGivenTakeType():base(46,"DrugGivenTakeType","给药用量方式",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12786,"DrugGivenTakeType_tid","tid(3次/日)","tid",true,true ),					
			new CHIS_Code_Dict_Detail(12837,"DrugGivenTakeType_qd","qd(1次/日)","qd",true,false ),					
			new CHIS_Code_Dict_Detail(12839,"DrugGivenTakeType_bid","bid(2次/日)","bid",true,false ),					
			new CHIS_Code_Dict_Detail(12840,"DrugGivenTakeType_qid","qid(4次/日)","qid",true,false ),					
			new CHIS_Code_Dict_Detail(12853,"DrugGivenTimeType_St","St(立即)","St",true,false ),					
			new CHIS_Code_Dict_Detail(12855,"DrugGivenTimeType_prn","prn(需要时-长期","prn",true,false ),					
			new CHIS_Code_Dict_Detail(12857,"DrugGivenTimeType_sos","sos(需要时-1次,12小时有效)","sos",true,false ),					
			new CHIS_Code_Dict_Detail(12862,"DrugGivenTimeType_Cit","Cit(急速)","Cit",true,false ),					
			new CHIS_Code_Dict_Detail(12854,"DrugGivenTimeType_DC","DC(停止/取消)","DC",true,false ),					
			new CHIS_Code_Dict_Detail(12850,"DrugGivenTimeType_hs","hs(临睡前)","hs",true,false ),					
			new CHIS_Code_Dict_Detail(12841,"DrugGivenTakeType_qh","qh(1次/小时)","qh",true,false ),					
			new CHIS_Code_Dict_Detail(12842,"DrugGivenTakeType_q2h","q2h(1次/2小时)","q2h",true,false ),					
			new CHIS_Code_Dict_Detail(12843,"DrugGivenTakeType_q4h","q4h(1次/4小时)","q4h",true,false ),					
			new CHIS_Code_Dict_Detail(12844,"DrugGivenTakeType_q6h","q6h(1次/6小时)","q6h",true,false ),					
			new CHIS_Code_Dict_Detail(12845,"DrugGivenTakeType_qn","qn(1次/晚)","qn",true,false ),					
			new CHIS_Code_Dict_Detail(12846,"DrugGivenTakeType_qod","qod(隔日1次)","qod",true,false ),					
			new CHIS_Code_Dict_Detail(12847,"DrugGivenTakeType_qw","qw(1次/周)","qw",true,false ),					
			new CHIS_Code_Dict_Detail(12782,"DrugGivenTimeType_3","晨起","3",true,false ),					
			new CHIS_Code_Dict_Detail(12798,"DrugGivenTimeType_4","早晚","4",true,false ),					
			new CHIS_Code_Dict_Detail(12851,"DrugGivenTimeType_am","am(上午)","am",true,false ),					
			new CHIS_Code_Dict_Detail(12852,"DrugGivenTimeType_pm","pm(下午)","pm",true,false ),					
			new CHIS_Code_Dict_Detail(12858,"DrugGivenTimeType_ac","ac(饭前)","ac",true,false ),					
			new CHIS_Code_Dict_Detail(12859,"DrugGivenTimeType_pc","pc(饭后)","pc",true,false ),					
			new CHIS_Code_Dict_Detail(12860,"DrugGivenTimeType_12n","12n(中午12点)","12n",true,false ),					
			new CHIS_Code_Dict_Detail(12861,"DrugGivenTimeType_12mn","12mn(午夜12点)","12mn",true,false ),					
			};
		}
		static DrugGivenTakeType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DrugGivenTakeType Ins(){return _ins??(_ins=new DrugGivenTakeType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///tid(3次/日)
  ///</summary>
  public static int k_DrugGivenTakeType_tid =12786;
    ///<summary>
  ///qd(1次/日)
  ///</summary>
  public static int k_DrugGivenTakeType_qd =12837;
    ///<summary>
  ///bid(2次/日)
  ///</summary>
  public static int k_DrugGivenTakeType_bid =12839;
    ///<summary>
  ///qid(4次/日)
  ///</summary>
  public static int k_DrugGivenTakeType_qid =12840;
    ///<summary>
  ///St(立即)
  ///</summary>
  public static int k_DrugGivenTimeType_St =12853;
    ///<summary>
  ///prn(需要时-长期
  ///</summary>
  public static int k_DrugGivenTimeType_prn =12855;
    ///<summary>
  ///sos(需要时-1次,12小时有效)
  ///</summary>
  public static int k_DrugGivenTimeType_sos =12857;
    ///<summary>
  ///Cit(急速)
  ///</summary>
  public static int k_DrugGivenTimeType_Cit =12862;
    ///<summary>
  ///DC(停止/取消)
  ///</summary>
  public static int k_DrugGivenTimeType_DC =12854;
    ///<summary>
  ///hs(临睡前)
  ///</summary>
  public static int k_DrugGivenTimeType_hs =12850;
    ///<summary>
  ///qh(1次/小时)
  ///</summary>
  public static int k_DrugGivenTakeType_qh =12841;
    ///<summary>
  ///q2h(1次/2小时)
  ///</summary>
  public static int k_DrugGivenTakeType_q2h =12842;
    ///<summary>
  ///q4h(1次/4小时)
  ///</summary>
  public static int k_DrugGivenTakeType_q4h =12843;
    ///<summary>
  ///q6h(1次/6小时)
  ///</summary>
  public static int k_DrugGivenTakeType_q6h =12844;
    ///<summary>
  ///qn(1次/晚)
  ///</summary>
  public static int k_DrugGivenTakeType_qn =12845;
    ///<summary>
  ///qod(隔日1次)
  ///</summary>
  public static int k_DrugGivenTakeType_qod =12846;
    ///<summary>
  ///qw(1次/周)
  ///</summary>
  public static int k_DrugGivenTakeType_qw =12847;
    ///<summary>
  ///晨起
  ///</summary>
  public static int k_DrugGivenTimeType_3 =12782;
    ///<summary>
  ///早晚
  ///</summary>
  public static int k_DrugGivenTimeType_4 =12798;
    ///<summary>
  ///am(上午)
  ///</summary>
  public static int k_DrugGivenTimeType_am =12851;
    ///<summary>
  ///pm(下午)
  ///</summary>
  public static int k_DrugGivenTimeType_pm =12852;
    ///<summary>
  ///ac(饭前)
  ///</summary>
  public static int k_DrugGivenTimeType_ac =12858;
    ///<summary>
  ///pc(饭后)
  ///</summary>
  public static int k_DrugGivenTimeType_pc =12859;
    ///<summary>
  ///12n(中午12点)
  ///</summary>
  public static int k_DrugGivenTimeType_12n =12860;
    ///<summary>
  ///12mn(午夜12点)
  ///</summary>
  public static int k_DrugGivenTimeType_12mn =12861;
    
  }

 	/// <summary>
	/// 处方组别 处方归集某一联组
	/// </summary>
    public partial class PrescriptionGroup:BaseDictValue{		 
		public PrescriptionGroup():base(47,"PrescriptionGroup","处方组别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12793,"PrescriptionGroup_SGL","独立出单据","SGL",true,false ),					
			new CHIS_Code_Dict_Detail(12800,"PrescriptionGroup_XYN","西药-常规","XYN",true,false ),					
			new CHIS_Code_Dict_Detail(12801,"PrescriptionGroup_ZYF","中药-方济药","ZYF",true,false ),					
			new CHIS_Code_Dict_Detail(12802,"PrescriptionGroup_ZY1","中药-中成药","ZYC",true,false ),					
			};
		}
		static PrescriptionGroup _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static PrescriptionGroup Ins(){return _ins??(_ins=new PrescriptionGroup());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///独立出单据
  ///</summary>
  public static int k_PrescriptionGroup_SGL =12793;
    ///<summary>
  ///西药-常规
  ///</summary>
  public static int k_PrescriptionGroup_XYN =12800;
    ///<summary>
  ///中药-方济药
  ///</summary>
  public static int k_PrescriptionGroup_ZYF =12801;
    ///<summary>
  ///中药-中成药
  ///</summary>
  public static int k_PrescriptionGroup_ZY1 =12802;
    
  }

 	/// <summary>
	/// 医药品类别 取值
	/// </summary>
    public partial class MedicalMainKind_V:BaseDictValue{		 
		public MedicalMainKind_V():base(48,"MedicalMainKind","医药品类别",true,true){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12804,"MedicalMainKind_XY","西药类","XY",true,false ),					
			new CHIS_Code_Dict_Detail(12805,"MedicalMainKind_ZYC","中药类","ZYC",true,false ),					
			new CHIS_Code_Dict_Detail(12806,"MedicalMainKind_ZYF","中药方剂","ZYF",true,false ),					
			new CHIS_Code_Dict_Detail(12957,"MedicalMainKind_ZYM","中药草","ZYM",true,false ),					
			new CHIS_Code_Dict_Detail(12966,"MedicalMainKind_ZHL","综合类","ZHL",true,false ),					
			new CHIS_Code_Dict_Detail(12867,"MedicalMainKind_QT","器材与其他","QT",true,false ),					
			};
		}
		static MedicalMainKind_V _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static MedicalMainKind_V Ins(){return _ins??(_ins=new MedicalMainKind_V());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///西药类
  ///</summary>
  public static int k_MedicalMainKind_XY =12804;
    ///<summary>
  ///中药类
  ///</summary>
  public static int k_MedicalMainKind_ZYC =12805;
    ///<summary>
  ///中药方剂
  ///</summary>
  public static int k_MedicalMainKind_ZYF =12806;
    ///<summary>
  ///中药草
  ///</summary>
  public static int k_MedicalMainKind_ZYM =12957;
    ///<summary>
  ///综合类
  ///</summary>
  public static int k_MedicalMainKind_ZHL =12966;
    ///<summary>
  ///器材与其他
  ///</summary>
  public static int k_MedicalMainKind_QT =12867;
    
  }

 	/// <summary>
	/// 发票类别 
	/// </summary>
    public partial class InvoiceType_V:BaseDictValue{		 
		public InvoiceType_V():base(49,"InvoiceType","发票类别",true,true){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12808,"InvoiceType_1","增值税发票","1",true,false ),					
			new CHIS_Code_Dict_Detail(12809,"InvoiceType_2","普通发票","2",true,false ),					
			};
		}
		static InvoiceType_V _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static InvoiceType_V Ins(){return _ins??(_ins=new InvoiceType_V());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///增值税发票
  ///</summary>
  public static int k_InvoiceType_1 =12808;
    ///<summary>
  ///普通发票
  ///</summary>
  public static int k_InvoiceType_2 =12809;
    
  }

 	/// <summary>
	/// 支付类型 
	/// </summary>
    public partial class PayType_V:BaseDictValue{		 
		public PayType_V():base(50,"PayType","支付类型",true,true){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12951,"PayType_wxpub","微信公众号","WXPUB",true,false ),					
			new CHIS_Code_Dict_Detail(12948,"PayType_zfb","支付宝","ALIQR",true,false ),					
			new CHIS_Code_Dict_Detail(12949,"PayType_wx","微信","WXQR",true,false ),					
			new CHIS_Code_Dict_Detail(12950,"PayType_xj","现金","CASH",true,false ),					
			};
		}
		static PayType_V _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static PayType_V Ins(){return _ins??(_ins=new PayType_V());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///微信公众号
  ///</summary>
  public static int k_PayType_wxpub =12951;
    ///<summary>
  ///支付宝
  ///</summary>
  public static int k_PayType_zfb =12948;
    ///<summary>
  ///微信
  ///</summary>
  public static int k_PayType_wx =12949;
    ///<summary>
  ///现金
  ///</summary>
  public static int k_PayType_xj =12950;
    
  }

 	/// <summary>
	/// 挂号来源 
	/// </summary>
    public partial class RegistFrom:BaseDictValue{		 
		public RegistFrom():base(52,"RegistFrom","挂号来源",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12953,"RegistFrom_WX","微信公众号","RegWX",true,false ),					
			new CHIS_Code_Dict_Detail(12954,"RegistFrom_APP","手机APP","RegAPP",true,false ),					
			new CHIS_Code_Dict_Detail(12955,"RegistFrom_WebPlat","云HIS平台","RegCHIS",true,false ),					
			new CHIS_Code_Dict_Detail(12956,"RegistFrom_OneMachine","一体机","RegOneMachine",true,false ),					
			new CHIS_Code_Dict_Detail(12968,"RegistFrom_V20Web","预约系统V20","V20Web",true,false ),					
			};
		}
		static RegistFrom _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static RegistFrom Ins(){return _ins??(_ins=new RegistFrom());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///微信公众号
  ///</summary>
  public static int k_RegistFrom_WX =12953;
    ///<summary>
  ///手机APP
  ///</summary>
  public static int k_RegistFrom_APP =12954;
    ///<summary>
  ///云HIS平台
  ///</summary>
  public static int k_RegistFrom_WebPlat =12955;
    ///<summary>
  ///一体机
  ///</summary>
  public static int k_RegistFrom_OneMachine =12956;
    ///<summary>
  ///预约系统V20
  ///</summary>
  public static int k_RegistFrom_V20Web =12968;
    
  }

 	/// <summary>
	/// 处方模板类别 
	/// </summary>
    public partial class TemplateType:BaseDictValue{		 
		public TemplateType():base(53,"TemplateType","处方模板类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12958,"TemplateType_formed","西药模板","1",true,false ),					
			new CHIS_Code_Dict_Detail(12959,"TemplateType_herb","中药模板","2",true,false ),					
			};
		}
		static TemplateType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static TemplateType Ins(){return _ins??(_ins=new TemplateType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///西药模板
  ///</summary>
  public static int k_TemplateType_formed =12958;
    ///<summary>
  ///中药模板
  ///</summary>
  public static int k_TemplateType_herb =12959;
    
  }

 	/// <summary>
	/// 挂号接诊类型 
	/// </summary>
    public partial class RegisterTreatType:BaseDictValue{		 
		public RegisterTreatType():base(54,"RegisterTreatType","挂号接诊类型",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12960,"RegisterTreatType_Normal","一般接诊","Normal",true,false ),					
			new CHIS_Code_Dict_Detail(12961,"RegisterTreatType_Transfer","转诊接诊","TransferTreat",true,false ),					
			};
		}
		static RegisterTreatType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static RegisterTreatType Ins(){return _ins??(_ins=new RegisterTreatType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///一般接诊
  ///</summary>
  public static int k_RegisterTreatType_Normal =12960;
    ///<summary>
  ///转诊接诊
  ///</summary>
  public static int k_RegisterTreatType_Transfer =12961;
    
  }

 	/// <summary>
	/// 附加费 
	/// </summary>
    public partial class ExtraFeeType:BaseDictValue{		 
		public ExtraFeeType():base(55,"ExtraFeeType","附加费",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12969,"ExtraFeeType_YF","快递费","KDF",true,false ),					
			new CHIS_Code_Dict_Detail(12970,"ExtraFeeType_ZJ","诊金","ExtraFeeType_ZJ",true,false ),					
			new CHIS_Code_Dict_Detail(12988,"ExtraFeeType_MFee","材料费","ExtraFeeType_MFee",true,false ),					
			new CHIS_Code_Dict_Detail(12989,"ExtraFeeType_PFee","人工费","ExtraFeeType_PFee",true,false ),					
			};
		}
		static ExtraFeeType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static ExtraFeeType Ins(){return _ins??(_ins=new ExtraFeeType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///快递费
  ///</summary>
  public static int k_ExtraFeeType_YF =12969;
    ///<summary>
  ///诊金
  ///</summary>
  public static int k_ExtraFeeType_ZJ =12970;
    ///<summary>
  ///材料费
  ///</summary>
  public static int k_ExtraFeeType_MFee =12988;
    ///<summary>
  ///人工费
  ///</summary>
  public static int k_ExtraFeeType_PFee =12989;
    
  }

 	/// <summary>
	/// 工作站类别 
	/// </summary>
    public partial class StationType:BaseDictValue{		 
		public StationType():base(56,"StationType","工作站类别",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(13005,"StationType_drugstore2","加盟药店-连锁药店2","StationType_drugstore2",true,false ),					
			new CHIS_Code_Dict_Detail(241,"StationType_DrugStore","加盟药店-连锁","StationType_DrugStore",true,false ),					
			new CHIS_Code_Dict_Detail(244,"StationType_drugstoreS","加盟药店-散店","StationType_drugstoreS",true,false ),					
			new CHIS_Code_Dict_Detail(242,"StationType_TreatClinic","接诊诊所","StationType_TreatClinic",true,false ),					
			new CHIS_Code_Dict_Detail(243,"StationType_Mgr","管理站","StationType_Mgr",true,false ),					
			};
		}
		static StationType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static StationType Ins(){return _ins??(_ins=new StationType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///加盟药店-连锁药店2
  ///</summary>
  public static int k_StationType_drugstore2 =13005;
    ///<summary>
  ///加盟药店-连锁
  ///</summary>
  public static int k_StationType_DrugStore =241;
    ///<summary>
  ///加盟药店-散店
  ///</summary>
  public static int k_StationType_drugstoreS =244;
    ///<summary>
  ///接诊诊所
  ///</summary>
  public static int k_StationType_TreatClinic =242;
    ///<summary>
  ///管理站
  ///</summary>
  public static int k_StationType_Mgr =243;
    
  }

 	/// <summary>
	/// 医生证书 
	/// </summary>
    public partial class DoctorCertTypes:BaseDictValue{		 
		public DoctorCertTypes():base(62,"DoctorCertTypes","医生证书",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12983,"DoctorCertTypes_ZYYSZGZ","执业医师资格证","DoctorCertTypes_ZYYSZGZ",true,false ),					
			new CHIS_Code_Dict_Detail(12984,"DoctorCertTypes_YSZYZS","医师执业证书","DoctorCertTypes_YSZYZS",true,false ),					
			};
		}
		static DoctorCertTypes _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DoctorCertTypes Ins(){return _ins??(_ins=new DoctorCertTypes());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///执业医师资格证
  ///</summary>
  public static int k_DoctorCertTypes_ZYYSZGZ =12983;
    ///<summary>
  ///医师执业证书
  ///</summary>
  public static int k_DoctorCertTypes_YSZYZS =12984;
    
  }

 	/// <summary>
	/// 健康干预内容 健康干预进行的内容
	/// </summary>
    public partial class HealthPlanType:BaseDictValue{		 
		public HealthPlanType():base(63,"HealthPlanType","健康干预内容",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12985,"HealthPlanType_SendSMS","发送短信","HealthPlanType_SendSMS",true,false ),					
			new CHIS_Code_Dict_Detail(12986,"HealthPlanType_TelConv","电话沟通","HealthPlanType_TelConv",true,false ),					
			new CHIS_Code_Dict_Detail(12987,"HealthPlanType_HTest","体检检查预约","HealthPlanType_HTest",true,false ),					
			};
		}
		static HealthPlanType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static HealthPlanType Ins(){return _ins??(_ins=new HealthPlanType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///发送短信
  ///</summary>
  public static int k_HealthPlanType_SendSMS =12985;
    ///<summary>
  ///电话沟通
  ///</summary>
  public static int k_HealthPlanType_TelConv =12986;
    ///<summary>
  ///体检检查预约
  ///</summary>
  public static int k_HealthPlanType_HTest =12987;
    
  }

 	/// <summary>
	/// 科室特殊类 用于判断科室的特殊性
	/// </summary>
    public partial class DepartType:BaseDictValue{		 
		public DepartType():base(64,"DepartType","科室特殊类",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(12996,"DepartType_XL","心理类","PSYCH",true,false ),					
			};
		}
		static DepartType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static DepartType Ins(){return _ins??(_ins=new DepartType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///心理类
  ///</summary>
  public static int k_DepartType_XL =12996;
    
  }

 	/// <summary>
	/// 中药用法 
	/// </summary>
    public partial class HerbUseType:BaseDictValue{		 
		public HerbUseType():base(65,"HerbUseType","中药用法",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(200,"HerbUseType_0","先煎","HerbUseType_0",true,false ),					
			new CHIS_Code_Dict_Detail(201,"HerbUseType_1","后下","HerbUseType_1",true,false ),					
			new CHIS_Code_Dict_Detail(202,"HerbUseType_2","包煎","HerbUseType_2",true,false ),					
			new CHIS_Code_Dict_Detail(203,"HerbUseType_3","另煎","HerbUseType_3",true,false ),					
			new CHIS_Code_Dict_Detail(204,"HerbUseType_4","烊化","HerbUseType_4",true,false ),					
			new CHIS_Code_Dict_Detail(205,"HerbUseType_5","泡服","HerbUseType_5",true,false ),					
			new CHIS_Code_Dict_Detail(206,"HerbUseType_6","冲服","HerbUseType_6",true,false ),					
			new CHIS_Code_Dict_Detail(207,"HerbUseType_7","打碎","HerbUseType_7",true,false ),					
			new CHIS_Code_Dict_Detail(208,"HerbUseType_8","煎汤代水","HerbUseType_8",true,false ),					
			};
		}
		static HerbUseType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static HerbUseType Ins(){return _ins??(_ins=new HerbUseType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///先煎
  ///</summary>
  public static int k_HerbUseType_0 =200;
    ///<summary>
  ///后下
  ///</summary>
  public static int k_HerbUseType_1 =201;
    ///<summary>
  ///包煎
  ///</summary>
  public static int k_HerbUseType_2 =202;
    ///<summary>
  ///另煎
  ///</summary>
  public static int k_HerbUseType_3 =203;
    ///<summary>
  ///烊化
  ///</summary>
  public static int k_HerbUseType_4 =204;
    ///<summary>
  ///泡服
  ///</summary>
  public static int k_HerbUseType_5 =205;
    ///<summary>
  ///冲服
  ///</summary>
  public static int k_HerbUseType_6 =206;
    ///<summary>
  ///打碎
  ///</summary>
  public static int k_HerbUseType_7 =207;
    ///<summary>
  ///煎汤代水
  ///</summary>
  public static int k_HerbUseType_8 =208;
    
  }

 	/// <summary>
	/// 亲友关系 
	/// </summary>
    public partial class RelationshipType:BaseDictValue{		 
		public RelationshipType():base(66,"RelationshipType","亲友关系",true,false){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(226,"RelationshipType_zinv","子女","RelationshipType_zinv",true,true ),					
			new CHIS_Code_Dict_Detail(227,"RelationshipType_fm","父母","RelationshipType_fm",true,false ),					
			new CHIS_Code_Dict_Detail(228,"RelationshipType_po","配偶","RelationshipType_po",true,false ),					
			new CHIS_Code_Dict_Detail(229,"RelationshipType_oth","其他","RelationshipType_oth",true,false ),					
			new CHIS_Code_Dict_Detail(220,"RelationshipType_Doter","女儿","RelationshipType_Doter",true,false ),					
			new CHIS_Code_Dict_Detail(221,"RelationshipType_Son","儿子","RelationshipType_Son",true,false ),					
			new CHIS_Code_Dict_Detail(222,"RelationshipType_Wife","妻子","RelationshipType_Wife",true,false ),					
			new CHIS_Code_Dict_Detail(223,"RelationshipType_Husband","丈夫","RelationshipType_Husband",true,false ),					
			new CHIS_Code_Dict_Detail(224,"RelationshipType_Father","父亲","RelationshipType_Father",true,false ),					
			new CHIS_Code_Dict_Detail(225,"RelationshipType_Mother","母亲","RelationshipType_Mother",true,false ),					
			};
		}
		static RelationshipType _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static RelationshipType Ins(){return _ins??(_ins=new RelationshipType());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///子女
  ///</summary>
  public static int k_RelationshipType_zinv =226;
    ///<summary>
  ///父母
  ///</summary>
  public static int k_RelationshipType_fm =227;
    ///<summary>
  ///配偶
  ///</summary>
  public static int k_RelationshipType_po =228;
    ///<summary>
  ///其他
  ///</summary>
  public static int k_RelationshipType_oth =229;
    ///<summary>
  ///女儿
  ///</summary>
  public static int k_RelationshipType_Doter =220;
    ///<summary>
  ///儿子
  ///</summary>
  public static int k_RelationshipType_Son =221;
    ///<summary>
  ///妻子
  ///</summary>
  public static int k_RelationshipType_Wife =222;
    ///<summary>
  ///丈夫
  ///</summary>
  public static int k_RelationshipType_Husband =223;
    ///<summary>
  ///父亲
  ///</summary>
  public static int k_RelationshipType_Father =224;
    ///<summary>
  ///母亲
  ///</summary>
  public static int k_RelationshipType_Mother =225;
    
  }

 	/// <summary>
	/// 班段 
	/// </summary>
    public partial class WorkSlot_V:BaseDictValue{		 
		public WorkSlot_V():base(67,"WorkSlot","班段",true,true){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			new CHIS_Code_Dict_Detail(13000,"WorkSlot_am","上午","1",true,true ),					
			new CHIS_Code_Dict_Detail(13001,"WorkSlot_pm","下午","2",true,false ),					
			new CHIS_Code_Dict_Detail(13002,"WorkSlot_nt","深夜","3",true,false ),					
			};
		}
		static WorkSlot_V _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static WorkSlot_V Ins(){return _ins??(_ins=new WorkSlot_V());} 
  //继续载入键名和值，生成属性
    ///<summary>
  ///上午
  ///</summary>
  public static int k_WorkSlot_am =13000;
    ///<summary>
  ///下午
  ///</summary>
  public static int k_WorkSlot_pm =13001;
    ///<summary>
  ///深夜
  ///</summary>
  public static int k_WorkSlot_nt =13002;
    
  }

  
  
}
