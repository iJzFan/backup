<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #> 
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>  
<#@ import namespace="System.Linq" #>   
<#@ import namespace="System.Data" #> 
<#@ import namespace="System.Data.SqlClient" #>     
<#@ import namespace="System.Collections.Generic" #>         
<#@ import namespace="System.IO" #>             
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>              
//--------------------------------------------------------------------------- ---     
// <auto-generated>             
//     此代码由T4模板自动生成          
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by Rex             
//     对此文件的更改可能会导致不正确的行为，并且如果               
//     重新生成代码，这些更改将会丢失。                     
// </auto-generated>      
//------------------------------------------------------------------------------          
    
using System;                
using Microsoft.EntityFrameworkCore;     
using System.ComponentModel.DataAnnotations;    
using System.Collections.Generic;
using CHIS;
using CHIS.Models; 
using System.Linq;
namespace <#=config.NameSpace#>   
{	   
<#
	using(SqlConnection conn = new SqlConnection(config.ConnectionString)){  //start conn
    conn.Open(); 
	//获取大类表
	string sql="select DictId,DictKey,DictName,IsEnable,IsValueCode,Remark from CHIS_Code_Dict_Main";
	DataSet ds=new DataSet();new SqlDataAdapter(sql, conn).Fill(ds);
	var rows = ds.Tables[0].Rows;  
    foreach(DataRow row in rows)
    { //start foreach
		var valstr=row["IsValueCode"].ToString()=="True"?"_V":"";
		var clsName=string.Format("{0}{1}",row["DictKey"],valstr);
		var ispenable=row["IsEnable"].ToString()!="False"?"true":"false";
		var ispvcode=row["IsValueCode"].ToString()=="True"?"true":"false";
#>
	/// <summary>
	/// <#=row["DictName"]#> <#=row["Remark"]#>
	/// </summary>
    public partial class <#=clsName#>:BaseDictValue{		 
		public <#=clsName#>():base(<#=row["DictId"]#>,"<#=row["DictKey"]#>","<#=row["DictName"]#>",<#=ispenable#>,<#=ispvcode#>){		   
			Items=new List<CHIS_Code_Dict_Detail>(){
			<#
			var sql1=string.Format("select DetailID,ItemKey,ItemName,ItemValue,IsDefault,IsEnable from CHIS_Code_Dict_Detail where  DictID={0} order by ShowOrder",row["DictId"]);
			System.Data.SqlClient.SqlCommand cmd1=new System.Data.SqlClient.SqlCommand(sql1,conn);
			var rd=cmd1.ExecuteReader();
			while(rd.Read()){
				var isenable=rd["IsEnable"].ToString()=="False"?"false":"true";
				var isdefault=rd["IsDefault"].ToString()=="True"?"true":"false";
			#>
new CHIS_Code_Dict_Detail(<#=rd["DetailID"]#>,"<#=rd["ItemKey"]#>","<#=rd["ItemName"]#>","<#=rd["ItemValue"]#>",<#=isenable#>,<#=isdefault#> ),					
			<#
			}	
			#>
};
		}
		static <#=clsName#> _ins = null; 
        /// <summary> 
        /// 获取单例
        /// </summary>
        /// <returns></returns>
        public static <#=clsName#> Ins(){return _ins??(_ins=new <#=clsName#>());} 
  //继续载入键名和值，生成属性
  <#rd.Close();rd=cmd1.ExecuteReader();
		 while(rd.Read()){ 
			 var key=Convert.ToString(rd["ItemKey"]);
			 if(!string.IsNullOrWhiteSpace(key)){
  #>
  ///<summary>
  ///<#=rd["ItemName"]#>
  ///</summary>
  public static int k_<#=rd["ItemKey"]#> =<#=rd["DetailID"]#>;
  <#}}#>
  <#rd.Close();cmd1.Dispose();#>

  }

 <# 
	} //end foreach    
 #> 
 <#} //end conn 
 #> 
}
<#+ 
	public class config
	{
		//public static readonly string ConnectionString="Data Source=(local);Integrated Security=true;Initial Catalog=Northwind;";
		public static readonly string ConnectionString="Data Source=113.105.131.248,16016;Initial Catalog=CHISV20;User ID=chisadminv20;Password=123.abc;";
		public static readonly string DbDatabase="CHISV20";

		public static readonly string ProjectName="CHIS";
		public static readonly string NameSpace=ProjectName +  ".DictValues";
		public static readonly string DbContaxtName=ProjectName + "Entities";
		public static readonly string DbType="SqlServer";//SqlServer,MySql	

		public static string[] UnExportTable=new string[]{"ztemp"};
	}
#>
